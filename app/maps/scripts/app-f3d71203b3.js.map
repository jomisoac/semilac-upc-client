{"version":3,"sources":["scripts/app.js"],"names":["config","$stateProvider","$translatePartialLoaderProvider","msNavigationServiceProvider","state","url","views","main@","templateUrl","controller","content@app.pages_autenticacion_login","bodyClass","$inject","angular","module","authService","jwtHelper","this","storeUser","jwt","sessionStorage","setItem","usuario","decodeToken","JSON","stringify","currentUser","parse","getItem","service","LoginController","Restangular","$state","iniciarSesion","login","post","vm","then","p","token","console","log","redirect","rol","mensajeError","error","status","data","go","all","MsWidgetController","$scope","$element","flip","isFlippable","flipped","toggleClass","isDefined","flippable","msWidgetDirective","restrict","scope","transclude","compile","tElement","addClass","iElement","iAttrs","MsWidgetCtrl","transcludeFn","clone","empty","append","msWidgetFrontDirective","require","flipWidget","msWidgetBackDirective","directive","MsTimelineController","setScrollEl","scrollEl","getScrollEl","undefined","msTimelineDirective","loadMore","MsTimelineCtrl","onScroll","scrollTop","height","threshold","loadMoreEl","position","top","unregisterOnScroll","removeClass","registerOnScroll","remove","on","off","element","$on","msTimelineItemDirective","$timeout","$q","init","find","event","args","cardEl","testForImage","itemLoaded","testForVisibility","deferred","defer","imgEl","length","resolve","promise","itemInViewport","itemReadyWatcher","$watch","current","old","equals","MsStepperController","registerMainForm","form","mainForm","registerStep","step","stepNumber","steps","stepTitle","push","sort","a","b","setupSteps","setCurrentStep","currentStepNumber","resetForm","x","$setPristine","$setUntouched","gotoFirstStep","isStepNumberValid","i","hide","show","gotoStep","gotoPreviousStep","gotoNextStep","gotoLastStep","isFirstStep","isLastStep","isStepCurrent","isStepDisabled","disabled","isStepValid","isStepOptional","optionalStep","$valid","isFormValid","currentStep","msStepperDirective","priority","bindToController","model","ctrls","FormCtrl","MsStepperCtrl","msStepperStepDirective","msSplashScreenDirective","$animate","link","splashScreenRemoveEvent","leave","msSidenavHelperDirective","MdSidenavCtrl","isOpen","isLockedOpen","isUndefined","parent","msSearchBarDirective","$document","expanderEl","collapserEl","expand","collapse","escKeyEvent","e","keyCode","msScrollConfigProvider","configuration","defaultConfiguration","extend","wheelSpeed","wheelPropagation","swipePropagation","minScrollbarLength","maxScrollbarLength","useBothWheelAxes","useKeyboard","suppressScrollX","suppressScrollY","scrollXMarginOffset","scrollYMarginOffset","stopPropagationOnClick","$get","getConfig","msScrollDirective","msScrollConfig","msUtils","fuseConfig","isMobile","updateScrollbar","PerfectScrollbar","update","options","msScroll","$eval","initialize","prop","destroy","provider","msResponsiveTableDirective","wrapper","after","msRandomClassDirective","msRandomClass","randomClass","Math","floor","random","saveItem","path","item","isString","$log","parts","split","id","_findOrCreateParent","updateItem","_id","uisref","_getUiSref","children","weight","isNumber","_path","deleteItem","navigation","splice","sortByWeight","_byWeight","pop","createParent","join","title","y","parseInt","stateParams","isObject","toJson","injector","get","clearNavigation","navigationScope","setActiveItem","node","activeItem","getActiveItem","getNavigationObject","root","setNavigationScope","setFolded","folded","getFolded","setFoldedOpen","foldedOpen","getFoldedOpen","toggleFolded","MsNavigationController","msNavigationService","toggleHorizontalMobileMenu","msNavigationDirective","$rootScope","$mdSidenav","$broadcast","bodyEl","setFoldExpander","$emit","removeFoldCollapser","foldExpanderEl","onFoldExpanderHover","setFoldCollapser","foldCollapserEl","onFoldCollapserHover","preventDefault","sidenav","close","MsNavigationNodeController","hasChildren","group","collapsable","collapsed","name","includes","params","$evalAsync","givenPathParts","activePathParts","indexOf","toggleCollapsed","collapseEl","offsetHeight","animate","display","animateHeightClass","css","expandEl","visibility","getClass","isHidden","hidden","isFunction","msNavigationNodeDirective","MsNavigationNodeCtrl","msNavigationItemDirective","msNavigationHorizontalDirective","MsNavigationHorizontalNodeController","isActive","msNavigationHorizontalNodeDirective","MsNavigationHorizontalNodeCtrl","msNavigationHorizontalItemDirective","$mdMedia","onClick","msNavFoldService","setFoldable","foldable","isNavFoldedOpen","toggleFold","openFolded","closeFolded","msNavIsFoldedDirective","isFoldedOpen","isFolded","fold","unfold","body","sidenavEl","openOverlay","closeOverlay","msNavIsFolded","MsNavController","isDisabled","disable","enable","setToggleItem","toggleItems","getLockedItems","lockedItems","setLockedItem","clearLockedItems","msNavDirective","$mdComponentRegistry","stateChangeSuccessEvent","when","msNavTitleDirective","msNavButtonDirective","msNavToggleDirective","tAttrs","attr","MsNavCtrl","toggle","isCollapsed","isExpanded","reject","elementToExpand","classes","expandAnimation","expanded","success","elementToCollapse","collapseAnimation","links","states","regExp","forEach","replace","locked","lockedItem","currentState","shouldExpand","factory","msMaterialColorPicker","$mdMenu","$mdColorPalette","fuseGenerator","ngModel","msModelType","attrs","setSelectedColor","$viewValue","palette","hue","color","updateSelectedColor","selectedColor","class","bgColorValue","rgba","palettes","value","fgColorValue","contrast","updateModel","activateHueSelection","$setViewValue","selectedPalette","selectedHues","hues","selectColor","removeColor","MsFormWizardController","registerForm","forms","previousStep","selectedIndex","nextStep","firstStep","lastStep","totalSteps","currentStepInvalid","$invalid","previousStepInvalid","formsIncomplete","msFormWizardDirective","msFormWizardFormDirective","formCtrl","MsFormWizardCtrl","msDatepickerFixConfigProvider","formatter","val","Date","parser","offset","moment","utcOffset","date","add","msDatepickerFix","msDatepickerFixConfig","elem","$formatters","unshift","$parsers","msCardDirective","templatePath","card","template","cardTemplateLoaded","content@app","icon","SampleController","fuseThemingProvider","setRegisteredPalettes","_registeredPalettes","registeredPalettes","setRegisteredThemes","_registeredThemes","registeredThemes","$cookies","invoke","_$cookies","getRegisteredPalettes","getRegisteredThemes","setActiveTheme","themeName","themes","list","warn","active","theme","put","setThemesList","themeList","$mdThemingProvider","fusePalettes","fuseThemes","customTheme","getObject","alwaysWatchTheme","definePalette","primaryPalette","primary","accentPalette","accent","warnPalette","backgroundPalette","background","_PALETTES","_THEMES","default","hue-1","hue-2","hue-3","pink","teal","constant","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","contrastDarkColors","contrastStrongLightColors","fuseGeneratorService","fuseTheming","generate","registeredTheme","colors","colorType","colorTypeName","levels","contrast1","contrast2","contrast3","contrast4","hue1","hue2","hue3","processAndStoreThemes","styleVars","colorTypes","colorLevelName","colorName","ucfirst","render","_themes","copy","selectedTheme","cssTemplate","regex","RegExp","Object","keys","matched","headEl","styleEl","html","_contrastLevel","contrastLevel","applyContrast","contrastLevels","white","1","2","3","4","black","string","charAt","toUpperCase","slice","MsThemeOptionsController","updateLayoutMode","layoutMode","updateLayoutStyle","layoutStyle","location","reload","msThemeOptions","panelOpen","toggleOptionsPanel","closeOptionsPanel","openOptionsPanel","backdropEl","$window","exists","detectBrowser","searchString","dataString","dataProp","versionSearchString","versionSearch","identity","subString","searchVersion","index","substring","browserInfo","browserData","navigator","userAgent","vendor","opera","osData","platform","browser","version","appVersion","os","toLowerCase","guidGenerator","S4","toString","mobileDetect","mobile","toggleInArray","array","MobileDetect","msApiProvider","setBaseUrl","baseUrl","getBaseUrl","getApiObject","api","register","key","resource","isArray","resourceObj","paramDefaults","actions","$resource","action","parameters","actionParts","method","apiObject","response","request","apiResolverService","resourceParts","l","filterByTags","items","tags","filtered","match","every","tag","tagExists","itemTag","filterSingleByTags","itemTags","filter","toTrustedFilter","$sce","trustAsHtml","htmlToPlainTextFilter","text","String","nospaceFilter","humanizeDocFilter","doc","type","$1","label","hljsDirective","$interpolate","code","contents","codeElement","lines","line","trim","firstLineWhitespace","startingWhitespaceRegex","map","highlightedCode","hljs","highlight","language","lang","shouldInterpolate","contentParent","fuseConfigProvider","fuseConfiguration","disableCustomScrollbars","disableMdInkRippleOnMobile","disableCustomScrollbarsOnMobile","configName","setConfig","configValue","addPart","ToolbarController","loadUser","userNombre","email","userRol","logout","clear","global","search","NavigationController","toggleMsNavigationFolded","msScrollOptions","MainController","targetScope","$id","runBlock","htmlClass","run","$ariaProvider","$logProvider","$translateProvider","debugEnabled","toastr","timeOut","positionClass","preventDuplicates","progressBar","useLoader","urlTemplate","preferredLanguage","useSanitizeValueStrategy","tabindex","stateChangeStartEvent","loadingProgress","routeConfig","$urlRouterProvider","$locationProvider","RestangularProvider","html5Mode","otherwise","layouts","verticalNavigation","main","toolbar","abstract","toolbar@app","navigation@app","IndexController","apiService","$templateCache"],"mappings":"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","file":"scripts/app-f3d71203b3.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.pages.autenticacion.login', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($stateProvider, $translatePartialLoaderProvider, msNavigationServiceProvider)\n    {\n        // State\n        $stateProvider.state('app.pages_autenticacion_login', {\n            url      : '/autenticacion/login',\n            views    : {\n                'main@'                          : {\n                    templateUrl: 'app/core/layouts/content-only.html',\n                    controller : 'MainController as vm'\n                },\n                'content@app.pages_autenticacion_login': {\n                    templateUrl: 'app/main/pages/autenticacion/login/login.html',\n                    controller : 'LoginController as vm'\n                }\n            },\n            bodyClass: 'login'\n        });\n\n        // Navigation\n        // msNavigationServiceProvider.saveItem('pages.autenticacion.login', {\n        //     title : 'Login',\n        //     state : 'app.pages_autenticacion_login',\n        //     weight: 2\n        // });\n    }\n\n})();\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.pages.autenticacion.login')\r\n        .service('authService', authService);\r\n\r\n    function authService(jwtHelper){\r\n\r\n        this.storeUser = function (jwt) {\r\n            sessionStorage.setItem('jwt', jwt);\r\n            var usuario = jwtHelper.decodeToken(jwt).usuario;\r\n            sessionStorage.setItem('usuario',JSON.stringify(usuario));\r\n            return usuario;\r\n        }\r\n\r\n        this.currentUser = function(){\r\n            return JSON.parse(sessionStorage.getItem('usuario'));\r\n        }\r\n    }\r\n})();\r\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.pages.autenticacion.login')\n        .controller('LoginController', LoginController);\n\n    /** @ngInject */\n    function LoginController(Restangular, $state, authService)\n    {\n      var vm = this;\n      var login = Restangular.all('/login');\n      vm.usuario = {};\n      vm.mensajeError = '';\n\n      vm.iniciarSesion = iniciarSesion;\n\n        if(authService.currentUser()) redirect(authService.currentUser().rol);\n\n        function iniciarSesion(){\n            login.post(vm.usuario).then(function (p) {\n                var usuario = authService.storeUser(p.token);\n                console.log(usuario)\n                redirect(usuario.rol);\n            }), function () {\n                vm.mensajeError = error.status == 401 ? error.data.mensajeError : 'A ocurrido un error inesperado';\n            }\n        }\n\n        function redirect(rol){\n            if (rol == 'SUPER_ADMIN') {\n                $state.go('app.sample');\n            } else if (rol == 'DIRECTOR') {\n                // $state.go('app.modules.director.principal');\n            } else if (rol == 'TUTOR') {\n                // $state.go('app.modules.tutor.principal');\n            } else if (rol == 'ESTUDIANTE'){\n                // $state.go('app.modules.estudiantes.principal');\n            }\n        }\n\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core',\n            [\n                'ngAnimate',\n                'ngAria',\n                'ngCookies',\n                'ngMessages',\n                'ngResource',\n                'ngSanitize',\n                'ngMaterial',\n                'pascalprecht.translate',\n                'ui.router'\n                \n            ]);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsWidgetController', MsWidgetController)\n        .directive('msWidget', msWidgetDirective)\n        .directive('msWidgetFront', msWidgetFrontDirective)\n        .directive('msWidgetBack', msWidgetBackDirective);\n\n    /** @ngInject */\n    function MsWidgetController($scope, $element)\n    {\n        var vm = this;\n\n        // Data\n        vm.flipped = false;\n\n        // Methods\n        vm.flip = flip;\n\n        //////////\n\n        /**\n         * Flip the widget\n         */\n        function flip()\n        {\n            if ( !isFlippable() )\n            {\n                return;\n            }\n\n            // Toggle flipped status\n            vm.flipped = !vm.flipped;\n\n            // Toggle the 'flipped' class\n            $element.toggleClass('flipped', vm.flipped);\n        }\n\n        /**\n         * Check if widget is flippable\n         *\n         * @returns {boolean}\n         */\n        function isFlippable()\n        {\n            return (angular.isDefined($scope.flippable) && $scope.flippable === true);\n        }\n    }\n\n    /** @ngInject */\n    function msWidgetDirective()\n    {\n        return {\n            restrict  : 'E',\n            scope     : {\n                flippable: '=?'\n            },\n            controller: 'MsWidgetController',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    //////////\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msWidgetFrontDirective()\n    {\n        return {\n            restrict  : 'E',\n            require   : '^msWidget',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget-front');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    // Methods\n                    scope.flipWidget = MsWidgetCtrl.flip;\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msWidgetBackDirective()\n    {\n        return {\n            restrict  : 'E',\n            require   : '^msWidget',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget-back');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    // Methods\n                    scope.flipWidget = MsWidgetCtrl.flip;\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsTimelineController', MsTimelineController)\n        .directive('msTimeline', msTimelineDirective)\n        .directive('msTimelineItem', msTimelineItemDirective);\n\n    /** @ngInject */\n    function MsTimelineController()\n    {\n        var vm = this;\n\n        // Data\n        vm.scrollEl = undefined;\n\n        // Methods\n        vm.setScrollEl = setScrollEl;\n        vm.getScrollEl = getScrollEl;\n\n        //////////\n\n        /**\n         * Set scroll element\n         *\n         * @param scrollEl\n         */\n        function setScrollEl(scrollEl)\n        {\n            vm.scrollEl = scrollEl;\n        }\n\n        /**\n         * Get scroll element\n         *\n         * @returns {undefined|*}\n         */\n        function getScrollEl()\n        {\n            return vm.scrollEl;\n        }\n    }\n\n    /** @ngInject */\n    function msTimelineDirective()\n    {\n        return {\n            scope     : {\n                loadMore: '&?msTimelineLoadMore'\n            },\n            controller: 'MsTimelineController',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-timeline');\n\n                return function postLink(scope, iElement, iAttrs, MsTimelineCtrl)\n                {\n                    // Create an element for triggering the load more action and append it\n                    var loadMoreEl = angular.element('<div class=\"ms-timeline-loader md-accent-bg md-whiteframe-4dp\"><span class=\"spinner animate-rotate\"></span></div>');\n                    iElement.append(loadMoreEl);\n\n                    // Grab the scrollable element and store it in the controller for general use\n                    var scrollEl = angular.element('#content');\n                    MsTimelineCtrl.setScrollEl(scrollEl);\n\n                    // Threshold\n                    var threshold = 144;\n\n                    // Register onScroll event for the first time\n                    registerOnScroll();\n\n                    /**\n                     * onScroll Event\n                     */\n                    function onScroll()\n                    {\n                        if ( scrollEl.scrollTop() + scrollEl.height() + threshold > loadMoreEl.position().top )\n                        {\n                            // Show the loader\n                            loadMoreEl.addClass('show');\n\n                            // Unregister scroll event to prevent triggering the function over and over again\n                            unregisterOnScroll();\n\n                            // Trigger load more event\n                            scope.loadMore().then(\n                                // Success\n                                function ()\n                                {\n                                    // Hide the loader\n                                    loadMoreEl.removeClass('show');\n\n                                    // Register the onScroll event again\n                                    registerOnScroll();\n                                },\n\n                                // Error\n                                function ()\n                                {\n                                    // Remove the loader completely\n                                    loadMoreEl.remove();\n                                }\n                            );\n                        }\n                    }\n\n                    /**\n                     * onScroll event registerer\n                     */\n                    function registerOnScroll()\n                    {\n                        scrollEl.on('scroll', onScroll);\n                    }\n\n                    /**\n                     * onScroll event unregisterer\n                     */\n                    function unregisterOnScroll()\n                    {\n                        scrollEl.off('scroll', onScroll);\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        unregisterOnScroll();\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msTimelineItemDirective($timeout, $q)\n    {\n        return {\n            scope  : true,\n            require: '^msTimeline',\n            compile: function (tElement)\n            {\n                tElement.addClass('ms-timeline-item').addClass('hidden');\n\n                return function postLink(scope, iElement, iAttrs, MsTimelineCtrl)\n                {\n                    var threshold = 72,\n                        itemLoaded = false,\n                        itemInViewport = false,\n                        scrollEl = MsTimelineCtrl.getScrollEl();\n\n                    //////////\n\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Check if the timeline item has ms-card\n                        if ( iElement.find('ms-card') )\n                        {\n                            // If the ms-card template loaded...\n                            scope.$on('msCard::cardTemplateLoaded', function (event, args)\n                            {\n                                var cardEl = angular.element(args[0]);\n\n                                // Test the card to see if there is any image on it\n                                testForImage(cardEl).then(function ()\n                                {\n                                    $timeout(function ()\n                                    {\n                                        itemLoaded = true;\n                                    });\n                                });\n                            });\n                        }\n                        else\n                        {\n                            // Test the element to see if there is any image on it\n                            testForImage(iElement).then(function ()\n                            {\n                                $timeout(function ()\n                                {\n                                    itemLoaded = true;\n                                });\n                            });\n                        }\n\n                        // Check if the loaded element also in the viewport\n                        scrollEl.on('scroll', testForVisibility);\n\n                        // Test for visibility for the first time without waiting for the scroll event\n                        testForVisibility();\n                    }\n\n                    // Item ready watcher\n                    var itemReadyWatcher = scope.$watch(\n                        function ()\n                        {\n                            return itemLoaded && itemInViewport;\n                        },\n                        function (current, old)\n                        {\n                            if ( angular.equals(current, old) )\n                            {\n                                return;\n                            }\n\n                            if ( current )\n                            {\n                                iElement.removeClass('hidden').addClass('animate');\n\n                                // Unbind itemReadyWatcher\n                                itemReadyWatcher();\n                            }\n                        }, true);\n\n                    /**\n                     * Test the given element for image\n                     *\n                     * @param element\n                     * @returns promise\n                     */\n                    function testForImage(element)\n                    {\n                        var deferred = $q.defer(),\n                            imgEl = element.find('img');\n\n                        if ( imgEl.length > 0 )\n                        {\n                            imgEl.on('load', function ()\n                            {\n                                deferred.resolve('Image is loaded');\n                            });\n                        }\n                        else\n                        {\n                            deferred.resolve('No images');\n                        }\n\n                        return deferred.promise;\n                    }\n\n                    /**\n                     * Test the element for visibility\n                     */\n                    function testForVisibility()\n                    {\n                        if ( scrollEl.scrollTop() + scrollEl.height() > iElement.position().top + threshold )\n                        {\n                            $timeout(function ()\n                            {\n                                itemInViewport = true;\n                            });\n\n                            // Unbind the scroll event\n                            scrollEl.off('scroll', testForVisibility);\n                        }\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsStepperController', MsStepperController)\n        .directive('msStepper', msStepperDirective)\n        .directive('msStepperStep', msStepperStepDirective);\n\n    /** @ngInject */\n    function MsStepperController($timeout)\n    {\n        var vm = this;\n\n        // Data\n        vm.mainForm = undefined;\n\n        vm.steps = [];\n        vm.currentStep = undefined;\n        vm.currentStepNumber = 1;\n\n        // Methods\n        vm.registerMainForm = registerMainForm;\n        vm.registerStep = registerStep;\n        vm.setupSteps = setupSteps;\n        vm.resetForm = resetForm;\n\n        vm.setCurrentStep = setCurrentStep;\n\n        vm.gotoStep = gotoStep;\n        vm.gotoPreviousStep = gotoPreviousStep;\n        vm.gotoNextStep = gotoNextStep;\n        vm.gotoFirstStep = gotoFirstStep;\n        vm.gotoLastStep = gotoLastStep;\n\n        vm.isFirstStep = isFirstStep;\n        vm.isLastStep = isLastStep;\n\n        vm.isStepCurrent = isStepCurrent;\n        vm.isStepDisabled = isStepDisabled;\n        vm.isStepOptional = isStepOptional;\n        vm.isStepValid = isStepValid;\n        vm.isStepNumberValid = isStepNumberValid;\n\n        vm.isFormValid = isFormValid;\n\n        //////////\n\n        /**\n         * Register the main form\n         *\n         * @param form\n         */\n        function registerMainForm(form)\n        {\n            vm.mainForm = form;\n        }\n\n        /**\n         * Register a step\n         *\n         * @param element\n         * @param scope\n         * @param form\n         */\n        function registerStep(element, scope, form)\n        {\n            var step = {\n                element   : element,\n                scope     : scope,\n                form      : form,\n                stepNumber: scope.step || (vm.steps.length + 1),\n                stepTitle : scope.stepTitle\n            };\n\n            // Push the step into steps array\n            vm.steps.push(step);\n\n            // Sort steps by stepNumber\n            vm.steps.sort(function (a, b)\n            {\n                return a.stepNumber - b.stepNumber;\n            });\n        }\n\n        /**\n         * Setup steps for the first time\n         */\n        function setupSteps()\n        {\n            vm.setCurrentStep(vm.currentStepNumber);\n        }\n\n        /**\n         * Reset steps and the main form\n         */\n        function resetForm()\n        {\n            // Timeout is required here because we need to\n            // let form model to reset before setting the\n            // statuses\n            $timeout(function ()\n            {\n                // Reset all the steps\n                for ( var x = 0; x < vm.steps.length; x++ )\n                {\n                    vm.steps[x].form.$setPristine();\n                    vm.steps[x].form.$setUntouched();\n                }\n\n                // Reset the main form\n                vm.mainForm.$setPristine();\n                vm.mainForm.$setUntouched();\n\n                // Go to first step\n                gotoFirstStep();\n            })\n        }\n\n        /**\n         * Set current step\n         *\n         * @param stepNumber\n         */\n        function setCurrentStep(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return;\n            }\n\n            // Update the current step number\n            vm.currentStepNumber = stepNumber;\n\n            // Hide all steps\n            for ( var i = 0; i < vm.steps.length; i++ )\n            {\n                vm.steps[i].element.hide();\n            }\n\n            // Show the current step\n            vm.steps[vm.currentStepNumber - 1].element.show();\n        }\n\n        /**\n         * Go to a step\n         *\n         * @param stepNumber\n         */\n        function gotoStep(stepNumber)\n        {\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the previous step\n         */\n        function gotoPreviousStep()\n        {\n            vm.setCurrentStep(vm.currentStepNumber - 1);\n        }\n\n        /**\n         * Go to the next step\n         */\n        function gotoNextStep()\n        {\n            vm.setCurrentStep(vm.currentStepNumber + 1);\n        }\n\n        /**\n         * Go to the first step\n         */\n        function gotoFirstStep()\n        {\n            vm.setCurrentStep(1);\n        }\n\n        /**\n         * Go to the last step\n         */\n        function gotoLastStep()\n        {\n            vm.setCurrentStep(vm.steps.length);\n        }\n\n        /**\n         * Check if the current step is the first step\n         *\n         * @returns {boolean}\n         */\n        function isFirstStep()\n        {\n            return vm.currentStepNumber === 1;\n        }\n\n        /**\n         * Check if the current step is the last step\n         *\n         * @returns {boolean}\n         */\n        function isLastStep()\n        {\n            return vm.currentStepNumber === vm.steps.length;\n        }\n\n        /**\n         * Check if the given step is the current one\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepCurrent(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return vm.currentStepNumber === stepNumber;\n        }\n\n        /**\n         * Check if the given step should be disabled\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepDisabled(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            var disabled = false;\n\n            for ( var i = 1; i < stepNumber; i++ )\n            {\n                if ( !isStepValid(i) )\n                {\n                    disabled = true;\n                    break;\n                }\n            }\n\n            return disabled;\n        }\n\n        /**\n         * Check if the given step is optional\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepOptional(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return vm.steps[stepNumber - 1].scope.optionalStep;\n        }\n\n        /**\n         * Check if the given step is valid\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepValid(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            // If the step is optional, always return true\n            if ( isStepOptional(stepNumber) )\n            {\n                return true;\n            }\n\n            return vm.steps[stepNumber - 1].form.$valid;\n        }\n\n        /**\n         * Check if the given step number is a valid step number\n         *\n         * @param stepNumber\n         * @returns {boolean}\n         */\n        function isStepNumberValid(stepNumber)\n        {\n            return !(stepNumber < 1 || stepNumber > vm.steps.length);\n        }\n\n        /**\n         * Check if the entire form is valid\n         *\n         * @returns {boolean}\n         */\n        function isFormValid()\n        {\n            return vm.mainForm.$valid;\n        }\n    }\n\n    /** @ngInject */\n    function msStepperDirective()\n    {\n        return {\n            restrict        : 'A',\n            require         : ['form', 'msStepper'],\n            priority        : 1001,\n            controller      : 'MsStepperController as MsStepper',\n            bindToController: {\n                model: '=ngModel'\n            },\n            transclude      : true,\n            templateUrl     : 'app/core/directives/ms-stepper/templates/horizontal/horizontal.html',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-stepper');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Register the main form and setup\n                    // the steps for the first time\n                    MsStepperCtrl.registerMainForm(FormCtrl);\n                    MsStepperCtrl.setupSteps();\n                };\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msStepperStepDirective()\n    {\n        return {\n            restrict: 'E',\n            require : ['form', '^msStepper'],\n            priority: 1000,\n            scope   : {\n                step        : '=?',\n                stepTitle   : '=?',\n                optionalStep: '=?'\n            },\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-stepper-step');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Is it an optional step?\n                    scope.optionalStep = angular.isDefined(iAttrs.optionalStep);\n\n                    // Register the step\n                    MsStepperCtrl.registerStep(iElement, scope, FormCtrl);\n\n                    // Hide the step by default\n                    iElement.hide();\n                };\n            }\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSplashScreen', msSplashScreenDirective);\n\n    /** @ngInject */\n    function msSplashScreenDirective($animate)\n    {\n        return {\n            restrict: 'E',\n            link    : function (scope, iElement)\n            {\n                var splashScreenRemoveEvent = scope.$on('msSplashScreen::remove', function ()\n                {\n                    $animate.leave(iElement).then(function ()\n                    {\n                        // De-register scope event\n                        splashScreenRemoveEvent();\n\n                        // Null-ify everything else\n                        scope = iElement = null;\n                    });\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSidenavHelper', msSidenavHelperDirective);\n\n    /** @ngInject */\n    function msSidenavHelperDirective()\n    {\n        return {\n            restrict: 'A',\n            require : '^mdSidenav',\n            link    : function (scope, iElement, iAttrs, MdSidenavCtrl)\n            {\n                // Watch md-sidenav open & locked open statuses\n                // and add class to the \".page-layout\" if only\n                // the sidenav open and NOT locked open\n                scope.$watch(function ()\n                {\n                    return MdSidenavCtrl.isOpen() && !MdSidenavCtrl.isLockedOpen();\n                }, function (current)\n                {\n                    if ( angular.isUndefined(current) )\n                    {\n                        return;\n                    }\n\n                    iElement.parent().toggleClass('full-height', current);\n                    angular.element('html').toggleClass('sidenav-open', current);\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSearchBar', msSearchBarDirective);\n\n    /** @ngInject */\n    function msSearchBarDirective($document)\n    {\n        return {\n            restrict   : 'E',\n            scope      : true,\n            templateUrl: 'app/core/directives/ms-search-bar/ms-search-bar.html',\n            compile    : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-search-bar');\n\n                return function postLink(scope, iElement)\n                {\n                    var expanderEl,\n                        collapserEl;\n\n                    // Initialize\n                    init();\n\n                    function init()\n                    {\n                        expanderEl = iElement.find('#ms-search-bar-expander');\n                        collapserEl = iElement.find('#ms-search-bar-collapser');\n\n                        expanderEl.on('click', expand);\n                        collapserEl.on('click', collapse);\n                    }\n\n                    /**\n                     * Expand\n                     */\n                    function expand()\n                    {\n                        iElement.addClass('expanded');\n\n                        // Esc key event\n                        $document.on('keyup', escKeyEvent);\n                    }\n\n                    /**\n                     * Collapse\n                     */\n                    function collapse()\n                    {\n                        iElement.removeClass('expanded');\n                    }\n\n                    /**\n                     * Escape key event\n                     *\n                     * @param e\n                     */\n                    function escKeyEvent(e)\n                    {\n                        if ( e.keyCode === 27 )\n                        {\n                            collapse();\n                            $document.off('keyup', escKeyEvent);\n                        }\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msScrollConfig', msScrollConfigProvider)\n        .directive('msScroll', msScrollDirective);\n\n    /** @ngInject */\n    function msScrollConfigProvider()\n    {\n        // Default configuration\n        var defaultConfiguration = {\n            wheelSpeed            : 1,\n            wheelPropagation      : false,\n            swipePropagation      : true,\n            minScrollbarLength    : null,\n            maxScrollbarLength    : null,\n            useBothWheelAxes      : false,\n            useKeyboard           : true,\n            suppressScrollX       : false,\n            suppressScrollY       : false,\n            scrollXMarginOffset   : 0,\n            scrollYMarginOffset   : 0,\n            stopPropagationOnClick: true\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            defaultConfiguration = angular.extend({}, defaultConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getConfig: getConfig\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Return the config\n             */\n            function getConfig()\n            {\n                return defaultConfiguration;\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msScrollDirective($timeout, msScrollConfig, msUtils, fuseConfig)\n    {\n        return {\n            restrict: 'AE',\n            compile : function (tElement)\n            {\n                // Do not replace scrollbars if\n                // 'disableCustomScrollbars' config enabled\n                if ( fuseConfig.getConfig('disableCustomScrollbars') )\n                {\n                    return;\n                }\n\n                // Do not replace scrollbars on mobile devices\n                // if 'disableCustomScrollbarsOnMobile' config enabled\n                if ( fuseConfig.getConfig('disableCustomScrollbarsOnMobile') && msUtils.isMobile() )\n                {\n                    return;\n                }\n\n                // Add class\n                tElement.addClass('ms-scroll');\n\n                return function postLink(scope, iElement, iAttrs)\n                {\n                    var options = {};\n\n                    // If options supplied, evaluate the given\n                    // value. This is because we don't want to\n                    // have an isolated scope but still be able\n                    // to use scope variables.\n                    // We don't want an isolated scope because\n                    // we should be able to use this everywhere\n                    // especially with other directives\n                    if ( iAttrs.msScroll )\n                    {\n                        options = scope.$eval(iAttrs.msScroll);\n                    }\n\n                    // Extend the given config with the ones from provider\n                    options = angular.extend({}, msScrollConfig.getConfig(), options);\n\n                    // Initialize the scrollbar\n                    $timeout(function ()\n                    {\n                        PerfectScrollbar.initialize(iElement[0], options);\n                    }, 0);\n\n                    // Update the scrollbar on element mouseenter\n                    iElement.on('mouseenter', updateScrollbar);\n\n                    // Watch scrollHeight and update\n                    // the scrollbar if it changes\n                    scope.$watch(function ()\n                    {\n                        return iElement.prop('scrollHeight');\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        updateScrollbar();\n                    });\n\n                    // Watch scrollWidth and update\n                    // the scrollbar if it changes\n                    scope.$watch(function ()\n                    {\n                        return iElement.prop('scrollWidth');\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        updateScrollbar();\n                    });\n\n                    /**\n                     * Update the scrollbar\n                     */\n                    function updateScrollbar()\n                    {\n                        PerfectScrollbar.update(iElement[0]);\n                    }\n\n                    // Cleanup on destroy\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('mouseenter');\n                        PerfectScrollbar.destroy(iElement[0]);\n                    });\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msResponsiveTable', msResponsiveTableDirective);\n\n    /** @ngInject */\n    function msResponsiveTableDirective()\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, iElement)\n            {\n                // Wrap the table\n                var wrapper = angular.element('<div class=\"ms-responsive-table-wrapper\"></div>');\n                iElement.after(wrapper);\n                wrapper.append(iElement);\n\n                //////////\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msRandomClass', msRandomClassDirective);\n\n    /** @ngInject */\n    function msRandomClassDirective()\n    {\n        return {\n            restrict: 'A',\n            scope   : {\n                msRandomClass: '='\n            },\n            link    : function (scope, iElement)\n            {\n                var randomClass = scope.msRandomClass[Math.floor(Math.random() * (scope.msRandomClass.length))];\n                iElement.addClass(randomClass);\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msNavigationService', msNavigationServiceProvider)\n        .controller('MsNavigationController', MsNavigationController)\n        // Vertical\n        .directive('msNavigation', msNavigationDirective)\n        .controller('MsNavigationNodeController', MsNavigationNodeController)\n        .directive('msNavigationNode', msNavigationNodeDirective)\n        .directive('msNavigationItem', msNavigationItemDirective)\n        //Horizontal\n        .directive('msNavigationHorizontal', msNavigationHorizontalDirective)\n        .controller('MsNavigationHorizontalNodeController', MsNavigationHorizontalNodeController)\n        .directive('msNavigationHorizontalNode', msNavigationHorizontalNodeDirective)\n        .directive('msNavigationHorizontalItem', msNavigationHorizontalItemDirective);\n\n    /** @ngInject */\n    function msNavigationServiceProvider()\n    {\n        // Inject $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        // Navigation array\n        var navigation = [];\n\n        var service = this;\n\n        // Methods\n        service.saveItem = saveItem;\n        service.deleteItem = deleteItem;\n        service.sortByWeight = sortByWeight;\n\n        //////////\n\n        /**\n         * Create or update the navigation item\n         *\n         * @param path\n         * @param item\n         */\n        function saveItem(path, item)\n        {\n            if ( !angular.isString(path) )\n            {\n                $log.error('path must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            var parts = path.split('.');\n\n            // Generate the object id from the parts\n            var id = parts[parts.length - 1];\n\n            // Get the parent item from the parts\n            var parent = _findOrCreateParent(parts);\n\n            // Decide if we are going to update or create\n            var updateItem = false;\n\n            for ( var i = 0; i < parent.length; i++ )\n            {\n                if ( parent[i]._id === id )\n                {\n                    updateItem = parent[i];\n\n                    break;\n                }\n            }\n\n            // Update\n            if ( updateItem )\n            {\n                angular.extend(updateItem, item);\n\n                // Add proper ui-sref\n                updateItem.uisref = _getUiSref(updateItem);\n            }\n            // Create\n            else\n            {\n                // Create an empty children array in the item\n                item.children = [];\n\n                // Add the default weight if not provided or if it's not a number\n                if ( angular.isUndefined(item.weight) || !angular.isNumber(item.weight) )\n                {\n                    item.weight = 1;\n                }\n\n                // Add the item id\n                item._id = id;\n\n                // Add the item path\n                item._path = path;\n\n                // Add proper ui-sref\n                item.uisref = _getUiSref(item);\n\n                // Push the item into the array\n                parent.push(item);\n            }\n        }\n\n        /**\n         * Delete navigation item\n         *\n         * @param path\n         */\n        function deleteItem(path)\n        {\n            if ( !angular.isString(path) )\n            {\n                $log.error('path must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            // Locate the item by using given path\n            var item = navigation,\n                parts = path.split('.');\n\n            for ( var p = 0; p < parts.length; p++ )\n            {\n                var id = parts[p];\n\n                for ( var i = 0; i < item.length; i++ )\n                {\n                    if ( item[i]._id === id )\n                    {\n                        // If we have a matching path,\n                        // we have found our object:\n                        // remove it.\n                        if ( item[i]._path === path )\n                        {\n                            item.splice(i, 1);\n                            return true;\n                        }\n\n                        // Otherwise grab the children of\n                        // the current item and continue\n                        item = item[i].children;\n                        break;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Sort the navigation items by their weights\n         *\n         * @param parent\n         */\n        function sortByWeight(parent)\n        {\n            // If parent not provided, sort the root items\n            if ( !parent )\n            {\n                parent = navigation;\n                parent.sort(_byWeight);\n            }\n\n            // Sort the children\n            for ( var i = 0; i < parent.length; i++ )\n            {\n                var children = parent[i].children;\n\n                if ( children.length > 1 )\n                {\n                    children.sort(_byWeight);\n                }\n\n                if ( children.length > 0 )\n                {\n                    sortByWeight(children);\n                }\n            }\n        }\n\n        /* ----------------- */\n        /* Private Functions */\n        /* ----------------- */\n\n        /**\n         * Find or create parent\n         *\n         * @param parts\n         * @returns {Array|Boolean}\n         * @private\n         */\n        function _findOrCreateParent(parts)\n        {\n            // Store the main navigation\n            var parent = navigation;\n\n            // If it's going to be a root item\n            // return the navigation itself\n            if ( parts.length === 1 )\n            {\n                return parent;\n            }\n\n            // Remove the last element from the parts as\n            // we don't need that to figure out the parent\n            parts.pop();\n\n            // Find and return the parent\n            for ( var i = 0; i < parts.length; i++ )\n            {\n                var _id = parts[i],\n                    createParent = true;\n\n                for ( var p = 0; p < parent.length; p++ )\n                {\n                    if ( parent[p]._id === _id )\n                    {\n                        parent = parent[p].children;\n                        createParent = false;\n\n                        break;\n                    }\n                }\n\n                // If there is no parent found, create one, push\n                // it into the current parent and assign it as a\n                // new parent\n                if ( createParent )\n                {\n                    var item = {\n                        _id     : _id,\n                        _path   : parts.join('.'),\n                        title   : _id,\n                        weight  : 1,\n                        children: []\n                    };\n\n                    parent.push(item);\n                    parent = item.children;\n                }\n            }\n\n            return parent;\n        }\n\n        /**\n         * Sort by weight\n         *\n         * @param x\n         * @param y\n         * @returns {number}\n         * @private\n         */\n        function _byWeight(x, y)\n        {\n            return parseInt(x.weight) - parseInt(y.weight);\n        }\n\n        /**\n         * Setup the ui-sref using state & state parameters\n         *\n         * @param item\n         * @returns {string}\n         * @private\n         */\n        function _getUiSref(item)\n        {\n            var uisref = '';\n\n            if ( angular.isDefined(item.state) )\n            {\n                uisref = item.state;\n\n                if ( angular.isDefined(item.stateParams) && angular.isObject(item.stateParams) )\n                {\n                    uisref = uisref + '(' + angular.toJson(item.stateParams) + ')';\n                }\n            }\n\n            return uisref;\n        }\n\n        /* ----------------- */\n        /* Service           */\n        /* ----------------- */\n\n        this.$get = function ()\n        {\n            var activeItem = null,\n                navigationScope = null,\n                folded = null,\n                foldedOpen = null;\n\n            var service = {\n                saveItem           : saveItem,\n                deleteItem         : deleteItem,\n                sort               : sortByWeight,\n                clearNavigation    : clearNavigation,\n                setActiveItem      : setActiveItem,\n                getActiveItem      : getActiveItem,\n                getNavigationObject: getNavigationObject,\n                setNavigationScope : setNavigationScope,\n                setFolded          : setFolded,\n                getFolded          : getFolded,\n                setFoldedOpen      : setFoldedOpen,\n                getFoldedOpen      : getFoldedOpen,\n                toggleFolded       : toggleFolded\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Clear the entire navigation\n             */\n            function clearNavigation()\n            {\n                // Clear the navigation array\n                navigation = [];\n\n                // Clear the vm.navigation from main controller\n                if ( navigationScope )\n                {\n                    navigationScope.vm.navigation = [];\n                }\n            }\n\n            /**\n             * Set active item\n             *\n             * @param node\n             * @param scope\n             */\n            function setActiveItem(node, scope)\n            {\n                activeItem = {\n                    node : node,\n                    scope: scope\n                };\n            }\n\n            /**\n             * Return active item\n             */\n            function getActiveItem()\n            {\n                return activeItem;\n            }\n\n            /**\n             * Return navigation object\n             *\n             * @param root\n             * @returns {Array}\n             */\n            function getNavigationObject(root)\n            {\n                if ( root )\n                {\n                    for ( var i = 0; i < navigation.length; i++ )\n                    {\n                        if ( navigation[i]._id === root )\n                        {\n                            return [navigation[i]];\n                        }\n                    }\n                }\n\n                return navigation;\n            }\n\n            /**\n             * Store navigation's scope for later use\n             *\n             * @param scope\n             */\n            function setNavigationScope(scope)\n            {\n                navigationScope = scope;\n            }\n\n            /**\n             * Set folded status\n             *\n             * @param status\n             */\n            function setFolded(status)\n            {\n                folded = status;\n            }\n\n            /**\n             * Return folded status\n             *\n             * @returns {*}\n             */\n            function getFolded()\n            {\n                return folded;\n            }\n\n            /**\n             * Set folded open status\n             *\n             * @param status\n             */\n            function setFoldedOpen(status)\n            {\n                foldedOpen = status;\n            }\n\n            /**\n             * Return folded open status\n             *\n             * @returns {*}\n             */\n            function getFoldedOpen()\n            {\n                return foldedOpen;\n            }\n\n\n            /**\n             * Toggle fold on stored navigation's scope\n             */\n            function toggleFolded()\n            {\n                navigationScope.toggleFolded();\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationController($scope, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        if ( $scope.root )\n        {\n            vm.navigation = msNavigationService.getNavigationObject($scope.root);\n        }\n        else\n        {\n            vm.navigation = msNavigationService.getNavigationObject();\n        }\n\n        // Methods\n        vm.toggleHorizontalMobileMenu = toggleHorizontalMobileMenu;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Sort the navigation before doing anything else\n            msNavigationService.sort();\n        }\n\n        /**\n         * Toggle horizontal mobile menu\n         */\n        function toggleHorizontalMobileMenu()\n        {\n            angular.element('body').toggleClass('ms-navigation-horizontal-mobile-menu-active');\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationDirective($rootScope, $timeout, $mdSidenav, msNavigationService)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                folded: '=',\n                root  : '@'\n            },\n            controller : 'MsNavigationController as vm',\n            templateUrl: 'app/core/directives/ms-navigation/templates/vertical.html',\n            transclude : true,\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-navigation');\n\n                return function postLink(scope, iElement)\n                {\n                    var bodyEl = angular.element('body'),\n                        foldExpanderEl = angular.element('<div id=\"ms-navigation-fold-expander\"></div>'),\n                        foldCollapserEl = angular.element('<div id=\"ms-navigation-fold-collapser\"></div>'),\n                        sidenav = $mdSidenav('navigation');\n\n                    // Store the navigation in the service for public access\n                    msNavigationService.setNavigationScope(scope);\n\n                    // Initialize\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Set the folded status for the first time.\n                        // First, we have to check if we have a folded\n                        // status available in the service already. This\n                        // will prevent navigation to act weird if we already\n                        // set the fold status, remove the navigation and\n                        // then re-initialize it, which happens if we\n                        // change to a view without a navigation and then\n                        // come back with history.back() function.\n\n                        // If the service didn't initialize before, set\n                        // the folded status from scope, otherwise we\n                        // won't touch anything because the folded status\n                        // already set in the service...\n                        if ( msNavigationService.getFolded() === null )\n                        {\n                            msNavigationService.setFolded(scope.folded);\n                        }\n\n                        if ( msNavigationService.getFolded() )\n                        {\n                            // Collapse everything.\n                            // This must be inside a $timeout because by the\n                            // time we call this, the 'msNavigation::collapse'\n                            // event listener is not registered yet. $timeout\n                            // will ensure that it will be called after it is\n                            // registered.\n                            $timeout(function ()\n                            {\n                                $rootScope.$broadcast('msNavigation::collapse');\n                            });\n\n                            // Add class to the body\n                            bodyEl.addClass('ms-navigation-folded');\n\n                            // Set fold expander\n                            setFoldExpander();\n                        }\n                    }\n\n                    // Sidenav locked open status watcher\n                    scope.$watch(function ()\n                    {\n                        return sidenav.isLockedOpen();\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        var folded = msNavigationService.getFolded();\n\n                        if ( folded )\n                        {\n                            if ( current )\n                            {\n                                // Collapse everything\n                                $rootScope.$broadcast('msNavigation::collapse');\n                            }\n                            else\n                            {\n                                // Expand the active one and its parents\n                                var activeItem = msNavigationService.getActiveItem();\n                                if ( activeItem )\n                                {\n                                    activeItem.scope.$emit('msNavigation::stateMatched');\n                                }\n                            }\n                        }\n                    });\n\n                    // Folded status watcher\n                    scope.$watch('folded', function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        setFolded(current);\n                    });\n\n                    /**\n                     * Set folded status\n                     *\n                     * @param folded\n                     */\n                    function setFolded(folded)\n                    {\n                        // Store folded status on the service for global access\n                        msNavigationService.setFolded(folded);\n\n                        if ( folded )\n                        {\n                            // Collapse everything\n                            $rootScope.$broadcast('msNavigation::collapse');\n\n                            // Add class to the body\n                            bodyEl.addClass('ms-navigation-folded');\n\n                            // Set fold expander\n                            setFoldExpander();\n                        }\n                        else\n                        {\n                            // Expand the active one and its parents\n                            var activeItem = msNavigationService.getActiveItem();\n                            if ( activeItem )\n                            {\n                                activeItem.scope.$emit('msNavigation::stateMatched');\n                            }\n\n                            // Remove body class\n                            bodyEl.removeClass('ms-navigation-folded ms-navigation-folded-open');\n\n                            // Remove fold collapser\n                            removeFoldCollapser();\n                        }\n                    }\n\n                    /**\n                     * Set fold expander\n                     */\n                    function setFoldExpander()\n                    {\n                        iElement.parent().append(foldExpanderEl);\n\n                        // Let everything settle for a moment\n                        // before registering the event listener\n                        $timeout(function ()\n                        {\n                            foldExpanderEl.on('mouseenter touchstart', onFoldExpanderHover);\n                        });\n                    }\n\n                    /**\n                     * Set fold collapser\n                     */\n                    function setFoldCollapser()\n                    {\n                        bodyEl.find('#main').append(foldCollapserEl);\n                        foldCollapserEl.on('mouseenter touchstart', onFoldCollapserHover);\n                    }\n\n                    /**\n                     * Remove fold collapser\n                     */\n                    function removeFoldCollapser()\n                    {\n                        foldCollapserEl.remove();\n                    }\n\n                    /**\n                     * onHover event of foldExpander\n                     */\n                    function onFoldExpanderHover(event)\n                    {\n                        if ( event )\n                        {\n                            event.preventDefault();\n                        }\n\n                        // Set folded open status\n                        msNavigationService.setFoldedOpen(true);\n\n                        // Expand the active one and its parents\n                        var activeItem = msNavigationService.getActiveItem();\n                        if ( activeItem )\n                        {\n                            activeItem.scope.$emit('msNavigation::stateMatched');\n                        }\n\n                        // Add class to the body\n                        bodyEl.addClass('ms-navigation-folded-open');\n\n                        // Remove the fold opener\n                        foldExpanderEl.remove();\n\n                        // Set fold collapser\n                        setFoldCollapser();\n                    }\n\n                    /**\n                     * onHover event of foldCollapser\n                     */\n                    function onFoldCollapserHover(event)\n                    {\n                        if ( event )\n                        {\n                            event.preventDefault();\n                        }\n\n                        // Set folded open status\n                        msNavigationService.setFoldedOpen(false);\n\n                        // Collapse everything\n                        $rootScope.$broadcast('msNavigation::collapse');\n\n                        // Remove body class\n                        bodyEl.removeClass('ms-navigation-folded-open');\n\n                        // Remove the fold collapser\n                        foldCollapserEl.remove();\n\n                        // Set fold expander\n                        setFoldExpander();\n                    }\n\n                    /**\n                     * Public access for toggling folded status externally\n                     */\n                    scope.toggleFolded = function ()\n                    {\n                        var folded = msNavigationService.getFolded();\n\n                        setFolded(!folded);\n                    };\n\n                    /**\n                     * On $stateChangeStart\n                     */\n                    scope.$on('$stateChangeStart', function ()\n                    {\n                        // Close the sidenav\n                        sidenav.close();\n\n                        // If navigation is folded open, close it\n                        if ( msNavigationService.getFolded() )\n                        {\n                            onFoldCollapserHover();\n                        }\n                    });\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        foldCollapserEl.off('mouseenter touchstart');\n                        foldExpanderEl.off('mouseenter touchstart');\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationNodeController($scope, $element, $rootScope, $animate, $state, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.element = $element;\n        vm.node = $scope.node;\n        vm.hasChildren = undefined;\n        vm.collapsed = undefined;\n        vm.collapsable = undefined;\n        vm.group = undefined;\n        vm.animateHeightClass = 'animate-height';\n\n        // Methods\n        vm.toggleCollapsed = toggleCollapsed;\n        vm.collapse = collapse;\n        vm.expand = expand;\n        vm.getClass = getClass;\n        vm.isHidden = isHidden;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Setup the initial values\n\n            // Has children?\n            vm.hasChildren = vm.node.children.length > 0;\n\n            // Is group?\n            vm.group = !!(angular.isDefined(vm.node.group) && vm.node.group === true);\n\n            // Is collapsable?\n            if ( !vm.hasChildren || vm.group )\n            {\n                vm.collapsable = false;\n            }\n            else\n            {\n                vm.collapsable = !!(angular.isUndefined(vm.node.collapsable) || typeof vm.node.collapsable !== 'boolean' || vm.node.collapsable === true);\n            }\n\n            // Is collapsed?\n            if ( !vm.collapsable )\n            {\n                vm.collapsed = false;\n            }\n            else\n            {\n                vm.collapsed = !!(angular.isUndefined(vm.node.collapsed) || typeof vm.node.collapsed !== 'boolean' || vm.node.collapsed === true);\n            }\n\n            // Expand all parents if we have a matching state or\n            // the current state is a child of the node's state\n            if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n            {\n                // If state params are defined, make sure they are\n                // equal, otherwise do not set the active item\n                if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                {\n                    return;\n                }\n\n                $scope.$emit('msNavigation::stateMatched');\n\n                // Also store the current active menu item\n                msNavigationService.setActiveItem(vm.node, $scope);\n            }\n\n            $scope.$on('msNavigation::stateMatched', function ()\n            {\n                // Expand if the current scope is collapsable and is collapsed\n                if ( vm.collapsable && vm.collapsed )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.collapsed = false;\n                    });\n                }\n            });\n\n            // Listen for collapse event\n            $scope.$on('msNavigation::collapse', function (event, path)\n            {\n                if ( vm.collapsed || !vm.collapsable )\n                {\n                    return;\n                }\n\n                // If there is no path defined, collapse\n                if ( angular.isUndefined(path) )\n                {\n                    vm.collapse();\n                }\n                // If there is a path defined, do not collapse\n                // the items that are inside that path. This will\n                // prevent parent items from collapsing\n                else\n                {\n                    var givenPathParts = path.split('.'),\n                        activePathParts = [];\n\n                    var activeItem = msNavigationService.getActiveItem();\n                    if ( activeItem )\n                    {\n                        activePathParts = activeItem.node._path.split('.');\n                    }\n\n                    // Test for given path\n                    if ( givenPathParts.indexOf(vm.node._id) > -1 )\n                    {\n                        return;\n                    }\n\n                    // Test for active path\n                    if ( activePathParts.indexOf(vm.node._id) > -1 )\n                    {\n                        return;\n                    }\n\n                    vm.collapse();\n                }\n            });\n\n            // Listen for $stateChangeSuccess event\n            $scope.$on('$stateChangeSuccess', function ()\n            {\n                if ( vm.node.state === $state.current.name )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Update active item on state change\n                    msNavigationService.setActiveItem(vm.node, $scope);\n\n                    // Collapse everything except the one we're using\n                    $rootScope.$broadcast('msNavigation::collapse', vm.node._path);\n                }\n            });\n        }\n\n        /**\n         * Toggle collapsed\n         */\n        function toggleCollapsed()\n        {\n            if ( vm.collapsed )\n            {\n                vm.expand();\n            }\n            else\n            {\n                vm.collapse();\n            }\n        }\n\n        /**\n         * Collapse\n         */\n        function collapse()\n        {\n            // Grab the element that we are going to collapse\n            var collapseEl = vm.element.children('ul');\n\n            // Grab the height\n            var height = collapseEl[0].offsetHeight;\n\n            $scope.$evalAsync(function ()\n            {\n                // Set collapsed status\n                vm.collapsed = true;\n\n                // Add collapsing class to the node\n                vm.element.addClass('collapsing');\n\n                // Animate the height\n                $animate.animate(collapseEl,\n                    {\n                        'display': 'block',\n                        'height' : height + 'px'\n                    },\n                    {\n                        'height': '0px'\n                    },\n                    vm.animateHeightClass\n                ).then(\n                    function ()\n                    {\n                        // Clear the inline styles after animation done\n                        collapseEl.css({\n                            'display': '',\n                            'height' : ''\n                        });\n\n                        // Clear collapsing class from the node\n                        vm.element.removeClass('collapsing');\n                    }\n                );\n\n                // Broadcast the collapse event so child items can also be collapsed\n                $scope.$broadcast('msNavigation::collapse');\n            });\n        }\n\n        /**\n         * Expand\n         */\n        function expand()\n        {\n            // Grab the element that we are going to expand\n            var expandEl = vm.element.children('ul');\n\n            // Move the element out of the dom flow and\n            // make it block so we can get its height\n            expandEl.css({\n                'position'  : 'absolute',\n                'visibility': 'hidden',\n                'display'   : 'block',\n                'height'    : 'auto'\n            });\n\n            // Grab the height\n            var height = expandEl[0].offsetHeight;\n\n            // Reset the style modifications\n            expandEl.css({\n                'position'  : '',\n                'visibility': '',\n                'display'   : '',\n                'height'    : ''\n            });\n\n            $scope.$evalAsync(function ()\n            {\n                // Set collapsed status\n                vm.collapsed = false;\n\n                // Add expanding class to the node\n                vm.element.addClass('expanding');\n\n                // Animate the height\n                $animate.animate(expandEl,\n                    {\n                        'display': 'block',\n                        'height' : '0px'\n                    },\n                    {\n                        'height': height + 'px'\n                    },\n                    vm.animateHeightClass\n                ).then(\n                    function ()\n                    {\n                        // Clear the inline styles after animation done\n                        expandEl.css({\n                            'height': ''\n                        });\n\n                        // Clear expanding class from the node\n                        vm.element.removeClass('expanding');\n                    }\n                );\n\n                // If item expanded, broadcast the collapse event from rootScope so that the other expanded items\n                // can be collapsed. This is necessary for keeping only one parent expanded at any time\n                $rootScope.$broadcast('msNavigation::collapse', vm.node._path);\n            });\n        }\n\n        /**\n         * Return the class\n         *\n         * @returns {*}\n         */\n        function getClass()\n        {\n            return vm.node.class;\n        }\n\n        /**\n         * Check if node should be hidden\n         *\n         * @returns {boolean}\n         */\n        function isHidden()\n        {\n            if ( angular.isDefined(vm.node.hidden) && angular.isFunction(vm.node.hidden) )\n            {\n                return vm.node.hidden();\n            }\n\n            return false;\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationNodeDirective()\n    {\n        return {\n            restrict        : 'A',\n            bindToController: {\n                node: '=msNavigationNode'\n            },\n            controller      : 'MsNavigationNodeController as vm',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-navigation-node');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationNodeCtrl)\n                {\n                    // Add custom classes\n                    iElement.addClass(MsNavigationNodeCtrl.getClass());\n\n                    // Add group class if it's a group\n                    if ( MsNavigationNodeCtrl.group )\n                    {\n                        iElement.addClass('group');\n                    }\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationItemDirective()\n    {\n        return {\n            restrict: 'A',\n            require : '^msNavigationNode',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-navigation-item');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationNodeCtrl)\n                {\n                    // If the item is collapsable...\n                    if ( MsNavigationNodeCtrl.collapsable )\n                    {\n                        iElement.on('click', MsNavigationNodeCtrl.toggleCollapsed);\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('click');\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalDirective(msNavigationService)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                root: '@'\n            },\n            controller : 'MsNavigationController as vm',\n            templateUrl: 'app/core/directives/ms-navigation/templates/horizontal.html',\n            transclude : true,\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal');\n\n                return function postLink(scope)\n                {\n                    // Store the navigation in the service for public access\n                    msNavigationService.setNavigationScope(scope);\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationHorizontalNodeController($scope, $element, $rootScope, $state, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.element = $element;\n        vm.node = $scope.node;\n        vm.hasChildren = undefined;\n        vm.group = undefined;\n\n        // Methods\n        vm.getClass = getClass;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Setup the initial values\n\n            // Is active\n            vm.isActive = false;\n\n            // Has children?\n            vm.hasChildren = vm.node.children.length > 0;\n\n            // Is group?\n            vm.group = !!(angular.isDefined(vm.node.group) && vm.node.group === true);\n\n            // Mark all parents as active if we have a matching state\n            // or the current state is a child of the node's state\n            if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n            {\n                // If state params are defined, make sure they are\n                // equal, otherwise do not set the active item\n                if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                {\n                    return;\n                }\n\n                $scope.$emit('msNavigation::stateMatched');\n\n                // Also store the current active menu item\n                msNavigationService.setActiveItem(vm.node, $scope);\n            }\n\n            $scope.$on('msNavigation::stateMatched', function ()\n            {\n                // Mark as active if has children\n                if ( vm.hasChildren )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = true;\n                    });\n                }\n            });\n\n            // Listen for clearActive event\n            $scope.$on('msNavigation::clearActive', function ()\n            {\n                if ( !vm.hasChildren )\n                {\n                    return;\n                }\n\n                var activePathParts = [];\n\n                var activeItem = msNavigationService.getActiveItem();\n                if ( activeItem )\n                {\n                    activePathParts = activeItem.node._path.split('.');\n                }\n\n                // Test for active path\n                if ( activePathParts.indexOf(vm.node._id) > -1 )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = true;\n                    });\n                }\n                else\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = false;\n                    });\n                }\n\n            });\n\n            // Listen for $stateChangeSuccess event\n            $scope.$on('$stateChangeSuccess', function ()\n            {\n                if ( vm.node.state === $state.current.name )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Update active item on state change\n                    msNavigationService.setActiveItem(vm.node, $scope);\n\n                    // Clear all active states everything except the one we're using\n                    $rootScope.$broadcast('msNavigation::clearActive');\n                }\n            });\n        }\n\n        /**\n         * Return the class\n         *\n         * @returns {*}\n         */\n        function getClass()\n        {\n            return vm.node.class;\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalNodeDirective()\n    {\n        return {\n            restrict        : 'A',\n            bindToController: {\n                node: '=msNavigationHorizontalNode'\n            },\n            controller      : 'MsNavigationHorizontalNodeController as vm',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal-node');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationHorizontalNodeCtrl)\n                {\n                    // Add custom classes\n                    iElement.addClass(MsNavigationHorizontalNodeCtrl.getClass());\n\n                    // Add group class if it's a group\n                    if ( MsNavigationHorizontalNodeCtrl.group )\n                    {\n                        iElement.addClass('group');\n                    }\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalItemDirective($mdMedia)\n    {\n        return {\n            restrict: 'A',\n            require : '^msNavigationHorizontalNode',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal-item');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationHorizontalNodeCtrl)\n                {\n                    iElement.on('click', onClick);\n\n                    function onClick()\n                    {\n                        if ( !MsNavigationHorizontalNodeCtrl.hasChildren || $mdMedia('gt-md') )\n                        {\n                            return;\n                        }\n\n                        iElement.toggleClass('expanded');\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('click');\n                    });\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('msNavFoldService', msNavFoldService)\n        .directive('msNavIsFolded', msNavIsFoldedDirective)\n        .controller('MsNavController', MsNavController)\n        .directive('msNav', msNavDirective)\n        .directive('msNavTitle', msNavTitleDirective)\n        .directive('msNavButton', msNavButtonDirective)\n        .directive('msNavToggle', msNavToggleDirective);\n\n    /** @ngInject */\n    function msNavFoldService()\n    {\n        var foldable = {};\n\n        var service = {\n            setFoldable    : setFoldable,\n            isNavFoldedOpen: isNavFoldedOpen,\n            toggleFold     : toggleFold,\n            openFolded     : openFolded,\n            closeFolded    : closeFolded\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Set the foldable\n         *\n         * @param scope\n         * @param element\n         */\n        function setFoldable(scope, element)\n        {\n            foldable = {\n                'scope'  : scope,\n                'element': element\n            };\n        }\n\n        /**\n         * Is folded open\n         */\n        function isNavFoldedOpen()\n        {\n            return foldable.scope.isNavFoldedOpen();\n        }\n\n        /**\n         * Toggle fold\n         */\n        function toggleFold()\n        {\n            foldable.scope.toggleFold();\n        }\n\n        /**\n         * Open folded navigation\n         */\n        function openFolded()\n        {\n            foldable.scope.openFolded();\n        }\n\n        /**\n         * Close folded navigation\n         */\n        function closeFolded()\n        {\n            foldable.scope.closeFolded();\n        }\n    }\n\n    /** @ngInject */\n    function msNavIsFoldedDirective($document, $rootScope, msNavFoldService)\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, iElement, iAttrs)\n            {\n                var isFolded = (iAttrs.msNavIsFolded === 'true'),\n                    isFoldedOpen = false,\n                    body = angular.element($document[0].body),\n                    openOverlay = angular.element('<div id=\"ms-nav-fold-open-overlay\"></div>'),\n                    closeOverlay = angular.element('<div id=\"ms-nav-fold-close-overlay\"></div>'),\n                    sidenavEl = iElement.parent();\n\n                // Initialize the service\n                msNavFoldService.setFoldable(scope, iElement, isFolded);\n\n                // Set the fold status for the first time\n                if ( isFolded )\n                {\n                    fold();\n                }\n                else\n                {\n                    unfold();\n                }\n\n                /**\n                 * Is nav folded open\n                 */\n                function isNavFoldedOpen()\n                {\n                    return isFoldedOpen;\n                }\n\n                /**\n                 * Toggle fold\n                 */\n                function toggleFold()\n                {\n                    isFolded = !isFolded;\n\n                    if ( isFolded )\n                    {\n                        fold();\n                    }\n                    else\n                    {\n                        unfold();\n                    }\n                }\n\n                /**\n                 * Fold the navigation\n                 */\n                function fold()\n                {\n                    // Add classes\n                    body.addClass('ms-nav-folded');\n\n                    // Collapse everything and scroll to the top\n                    $rootScope.$broadcast('msNav::forceCollapse');\n                    iElement.scrollTop(0);\n\n                    // Append the openOverlay to the element\n                    sidenavEl.append(openOverlay);\n\n                    // Event listeners\n                    openOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        openFolded(event);\n                        isFoldedOpen = true;\n                    });\n                }\n\n                /**\n                 * Open folded navigation\n                 */\n                function openFolded(event)\n                {\n                    if ( angular.isDefined(event) )\n                    {\n                        event.preventDefault();\n                    }\n\n                    body.addClass('ms-nav-folded-open');\n\n                    // Update the location\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    // Remove open overlay\n                    sidenavEl.find(openOverlay).remove();\n\n                    // Append close overlay and bind its events\n                    sidenavEl.parent().append(closeOverlay);\n                    closeOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        closeFolded(event);\n                        isFoldedOpen = false;\n                    });\n                }\n\n                /**\n                 * Close folded navigation\n                 */\n                function closeFolded(event)\n                {\n                    if ( angular.isDefined(event) )\n                    {\n                        event.preventDefault();\n                    }\n\n                    // Collapse everything and scroll to the top\n                    $rootScope.$broadcast('msNav::forceCollapse');\n                    iElement.scrollTop(0);\n\n                    body.removeClass('ms-nav-folded-open');\n\n                    // Remove close overlay\n                    sidenavEl.parent().find(closeOverlay).remove();\n\n                    // Append open overlay and bind its events\n                    sidenavEl.append(openOverlay);\n                    openOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        openFolded(event);\n                        isFoldedOpen = true;\n                    });\n                }\n\n                /**\n                 * Unfold the navigation\n                 */\n                function unfold()\n                {\n                    body.removeClass('ms-nav-folded ms-nav-folded-open');\n\n                    // Update the location\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    iElement.off('mouseenter mouseleave');\n                }\n\n                // Expose functions to the scope\n                scope.toggleFold = toggleFold;\n                scope.openFolded = openFolded;\n                scope.closeFolded = closeFolded;\n                scope.isNavFoldedOpen = isNavFoldedOpen;\n\n                // Cleanup\n                scope.$on('$destroy', function ()\n                {\n                    openOverlay.off('mouseenter touchstart');\n                    closeOverlay.off('mouseenter touchstart');\n                    iElement.off('mouseenter mouseleave');\n                });\n            }\n        };\n    }\n\n\n    /** @ngInject */\n    function MsNavController()\n    {\n        var vm = this,\n            disabled = false,\n            toggleItems = [],\n            lockedItems = [];\n\n        // Data\n\n        // Methods\n        vm.isDisabled = isDisabled;\n        vm.enable = enable;\n        vm.disable = disable;\n        vm.setToggleItem = setToggleItem;\n        vm.getLockedItems = getLockedItems;\n        vm.setLockedItem = setLockedItem;\n        vm.clearLockedItems = clearLockedItems;\n\n        //////////\n\n        /**\n         * Is navigation disabled\n         *\n         * @returns {boolean}\n         */\n        function isDisabled()\n        {\n            return disabled;\n        }\n\n        /**\n         * Disable the navigation\n         */\n        function disable()\n        {\n            disabled = true;\n        }\n\n        /**\n         * Enable the navigation\n         */\n        function enable()\n        {\n            disabled = false;\n        }\n\n        /**\n         * Set toggle item\n         *\n         * @param element\n         * @param scope\n         */\n        function setToggleItem(element, scope)\n        {\n            toggleItems.push({\n                'element': element,\n                'scope'  : scope\n            });\n        }\n\n        /**\n         * Get locked items\n         *\n         * @returns {Array}\n         */\n        function getLockedItems()\n        {\n            return lockedItems;\n        }\n\n        /**\n         * Set locked item\n         *\n         * @param element\n         * @param scope\n         */\n        function setLockedItem(element, scope)\n        {\n            lockedItems.push({\n                'element': element,\n                'scope'  : scope\n            });\n        }\n\n        /**\n         * Clear locked items list\n         */\n        function clearLockedItems()\n        {\n            lockedItems = [];\n        }\n    }\n\n    /** @ngInject */\n    function msNavDirective($rootScope, $mdComponentRegistry, msNavFoldService)\n    {\n        return {\n            restrict  : 'E',\n            scope     : {},\n            controller: 'MsNavController',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-nav');\n\n                return function postLink(scope)\n                {\n                    // Update toggle status according to the ui-router current state\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    // Update toggles on state changes\n                    var stateChangeSuccessEvent = $rootScope.$on('$stateChangeSuccess', function ()\n                    {\n                        $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                        // Close navigation sidenav on stateChangeSuccess\n                        $mdComponentRegistry.when('navigation').then(function (navigation)\n                        {\n                            navigation.close();\n\n                            if ( msNavFoldService.isNavFoldedOpen() )\n                            {\n                                msNavFoldService.closeFolded();\n                            }\n                        });\n                    });\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        stateChangeSuccessEvent();\n                    })\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavTitleDirective()\n    {\n        return {\n            restrict: 'A',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-nav-title');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavButtonDirective()\n    {\n        return {\n            restrict: 'AE',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-nav-button');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavToggleDirective($rootScope, $q, $animate, $state)\n    {\n        return {\n            restrict: 'A',\n            require : '^msNav',\n            scope   : true,\n            compile : function (tElement, tAttrs)\n            {\n                tElement.addClass('ms-nav-toggle');\n\n                // Add collapsed attr\n                if ( angular.isUndefined(tAttrs.collapsed) )\n                {\n                    tAttrs.collapsed = true;\n                }\n\n                tElement.attr('collapsed', tAttrs.collapsed);\n\n                return function postLink(scope, iElement, iAttrs, MsNavCtrl)\n                {\n                    var classes = {\n                        expanded         : 'expanded',\n                        expandAnimation  : 'expand-animation',\n                        collapseAnimation: 'collapse-animation'\n                    };\n\n                    // Store all related states\n                    var links = iElement.find('a');\n                    var states = [];\n                    var regExp = /\\(.*\\)/g;\n\n                    angular.forEach(links, function (link)\n                    {\n                        var state = angular.element(link).attr('ui-sref');\n\n                        if ( angular.isUndefined(state) )\n                        {\n                            return;\n                        }\n\n                        // Remove any parameter definition from the state name before storing it\n                        state = state.replace(regExp, '');\n\n                        states.push(state);\n                    });\n\n                    // Store toggle-able element and its scope in the main nav controller\n                    MsNavCtrl.setToggleItem(iElement, scope);\n\n                    // Click handler\n                    iElement.children('.ms-nav-button').on('click', toggle);\n\n                    // Toggle function\n                    function toggle()\n                    {\n                        // If navigation is disabled, do nothing...\n                        if ( MsNavCtrl.isDisabled() )\n                        {\n                            return;\n                        }\n\n                        // Disable the entire navigation to prevent spamming\n                        MsNavCtrl.disable();\n\n                        if ( isCollapsed() )\n                        {\n                            // Clear the locked items list\n                            MsNavCtrl.clearLockedItems();\n\n                            // Emit pushToLockedList event\n                            scope.$emit('msNav::pushToLockedList');\n\n                            // Collapse everything but locked items\n                            $rootScope.$broadcast('msNav::collapse');\n\n                            // Expand and then...\n                            expand().then(function ()\n                            {\n                                // Enable the entire navigation after animations completed\n                                MsNavCtrl.enable();\n                            });\n                        }\n                        else\n                        {\n                            // Collapse with all children\n                            scope.$broadcast('msNav::forceCollapse');\n                        }\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.children('.ms-nav-button').off('click');\n                    });\n\n                    /*---------------------*/\n                    /* Scope Events        */\n                    /*---------------------*/\n\n                    /**\n                     * Collapse everything but locked items\n                     */\n                    scope.$on('msNav::collapse', function ()\n                    {\n                        // Only collapse toggles that are not locked\n                        var lockedItems = MsNavCtrl.getLockedItems();\n                        var locked = false;\n\n                        angular.forEach(lockedItems, function (lockedItem)\n                        {\n                            if ( angular.equals(lockedItem.scope, scope) )\n                            {\n                                locked = true;\n                            }\n                        });\n\n                        if ( locked )\n                        {\n                            return;\n                        }\n\n                        // Collapse and then...\n                        collapse().then(function ()\n                        {\n                            // Enable the entire navigation after animations completed\n                            MsNavCtrl.enable();\n                        });\n                    });\n\n                    /**\n                     * Collapse everything\n                     */\n                    scope.$on('msNav::forceCollapse', function ()\n                    {\n                        // Collapse and then...\n                        collapse().then(function ()\n                        {\n                            // Enable the entire navigation after animations completed\n                            MsNavCtrl.enable();\n                        });\n                    });\n\n                    /**\n                     * Expand toggles that match with the current states\n                     */\n                    scope.$on('msNav::expandMatchingToggles', function ()\n                    {\n                        var currentState = $state.current.name;\n                        var shouldExpand = false;\n\n                        angular.forEach(states, function (state)\n                        {\n                            if ( currentState === state )\n                            {\n                                shouldExpand = true;\n                            }\n                        });\n\n                        if ( shouldExpand )\n                        {\n                            expand();\n                        }\n                        else\n                        {\n                            collapse();\n                        }\n                    });\n\n                    /**\n                     * Add toggle to the locked list\n                     */\n                    scope.$on('msNav::pushToLockedList', function ()\n                    {\n                        // Set expanded item on main nav controller\n                        MsNavCtrl.setLockedItem(iElement, scope);\n                    });\n\n                    /*---------------------*/\n                    /* Internal functions  */\n                    /*---------------------*/\n\n                    /**\n                     * Is element collapsed\n                     *\n                     * @returns {bool}\n                     */\n                    function isCollapsed()\n                    {\n                        return iElement.attr('collapsed') === 'true';\n                    }\n\n                    /**\n                     * Is element expanded\n                     *\n                     * @returns {bool}\n                     */\n                    function isExpanded()\n                    {\n                        return !isCollapsed();\n                    }\n\n                    /**\n                     * Expand the toggle\n                     *\n                     * @returns $promise\n                     */\n                    function expand()\n                    {\n                        // Create a new deferred object\n                        var deferred = $q.defer();\n\n                        // If the menu item is already expanded, do nothing..\n                        if ( isExpanded() )\n                        {\n                            // Reject the deferred object\n                            deferred.reject({'error': true});\n\n                            // Return the promise\n                            return deferred.promise;\n                        }\n\n                        // Set element attr\n                        iElement.attr('collapsed', false);\n\n                        // Grab the element to expand\n                        var elementToExpand = angular.element(iElement.find('ms-nav-toggle-items')[0]);\n\n                        // Move the element out of the dom flow and\n                        // make it block so we can get its height\n                        elementToExpand.css({\n                            'position'  : 'absolute',\n                            'visibility': 'hidden',\n                            'display'   : 'block',\n                            'height'    : 'auto'\n                        });\n\n                        // Grab the height\n                        var height = elementToExpand[0].offsetHeight;\n\n                        // Reset the style modifications\n                        elementToExpand.css({\n                            'position'  : '',\n                            'visibility': '',\n                            'display'   : '',\n                            'height'    : ''\n                        });\n\n                        // Animate the height\n                        scope.$evalAsync(function ()\n                        {\n                            $animate.animate(elementToExpand,\n                                {\n                                    'display': 'block',\n                                    'height' : '0px'\n                                },\n                                {\n                                    'height': height + 'px'\n                                },\n                                classes.expandAnimation\n                            ).then(\n                                function ()\n                                {\n                                    // Add expanded class\n                                    elementToExpand.addClass(classes.expanded);\n\n                                    // Clear the inline styles after animation done\n                                    elementToExpand.css({'height': ''});\n\n                                    // Resolve the deferred object\n                                    deferred.resolve({'success': true});\n                                }\n                            );\n                        });\n\n                        // Return the promise\n                        return deferred.promise;\n                    }\n\n                    /**\n                     * Collapse the toggle\n                     *\n                     * @returns $promise\n                     */\n                    function collapse()\n                    {\n                        // Create a new deferred object\n                        var deferred = $q.defer();\n\n                        // If the menu item is already collapsed, do nothing..\n                        if ( isCollapsed() )\n                        {\n                            // Reject the deferred object\n                            deferred.reject({'error': true});\n\n                            // Return the promise\n                            return deferred.promise;\n                        }\n\n                        // Set element attr\n                        iElement.attr('collapsed', true);\n\n                        // Grab the element to collapse\n                        var elementToCollapse = angular.element(iElement.find('ms-nav-toggle-items')[0]);\n\n                        // Grab the height\n                        var height = elementToCollapse[0].offsetHeight;\n\n                        // Animate the height\n                        scope.$evalAsync(function ()\n                        {\n                            $animate.animate(elementToCollapse,\n                                {\n                                    'height': height + 'px'\n                                },\n                                {\n                                    'height': '0px'\n                                },\n                                classes.collapseAnimation\n                            ).then(\n                                function ()\n                                {\n                                    // Remove expanded class\n                                    elementToCollapse.removeClass(classes.expanded);\n\n                                    // Clear the inline styles after animation done\n                                    elementToCollapse.css({\n                                        'display': '',\n                                        'height' : ''\n                                    });\n\n                                    // Resolve the deferred object\n                                    deferred.resolve({'success': true});\n                                }\n                            );\n                        });\n\n                        // Return the promise\n                        return deferred.promise;\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msMaterialColorPicker', msMaterialColorPicker);\n\n    /** @ngInject */\n    function msMaterialColorPicker($mdMenu, $mdColorPalette, fuseGenerator)\n    {\n        return {\n            require    : 'ngModel',\n            restrict   : 'E',\n            scope      : {\n                ngModel    : '=',\n                msModelType: '@?'\n            },\n            templateUrl: 'app/core/directives/ms-material-color-picker/ms-material-color-picker.html',\n            link       : function ($scope, element, attrs, ngModel)\n            {\n                // Material Color Palette\n                $scope.palettes = $mdColorPalette;\n                $scope.selectedPalette = false;\n                $scope.selectedHues = false;\n\n                /**\n                 * ModelType: 'obj', 'class'(default)\n                 * @type {string|string}\n                 */\n                $scope.msModelType = $scope.msModelType || 'class';\n\n                /**\n                 * Initialize / Watch model changes\n                 */\n                $scope.$watch('ngModel', setSelectedColor);\n\n                /**\n                 * Activate Hue Selection\n                 * @param palette\n                 * @param hues\n                 */\n                $scope.activateHueSelection = function (palette, hues)\n                {\n                    $scope.selectedPalette = palette;\n                    $scope.selectedHues = hues;\n                };\n\n                /**\n                 * Select Color\n                 * @type {selectColor}\n                 */\n                $scope.selectColor = function (palette, hue)\n                {\n                    // Update Selected Color\n                    updateSelectedColor(palette, hue);\n\n                    // Update Model Value\n                    updateModel();\n\n                    // Hide The picker\n                    $mdMenu.hide();\n                };\n\n                $scope.removeColor = function ()\n                {\n\n                    $scope.selectedColor = {\n                        palette: '',\n                        hue    : '',\n                        class  : ''\n                    };\n\n                    $scope.activateHueSelection(false, false);\n\n                    updateModel();\n                };\n\n                /**\n                 * Set SelectedColor by model type\n                 */\n                function setSelectedColor()\n                {\n                    if ( !ngModel.$viewValue || ngModel.$viewValue === '' )\n                    {\n                        return;\n                    }\n\n                    var palette, hue;\n\n                    // If ModelType Class\n                    if ( $scope.msModelType === 'class' )\n                    {\n                        var color = ngModel.$viewValue.split('-');\n                        if ( color.length >= 5 )\n                        {\n                            palette = color[1] + '-' + color[2];\n                            hue = color[3];\n                        }\n                        else\n                        {\n                            palette = color[1];\n                            hue = color[2];\n                        }\n                    }\n                    // If ModelType Object\n                    else if ( $scope.msModelType === 'obj' )\n                    {\n                        palette = ngModel.$viewValue.palette;\n                        hue = ngModel.$viewValue.hue || 500;\n                    }\n\n                    // Update Selected Color\n                    updateSelectedColor(palette, hue);\n                }\n\n\n                /**\n                 * Update Selected Color\n                 * @param palette\n                 * @param hue\n                 */\n                function updateSelectedColor(palette, hue)\n                {\n                    $scope.selectedColor = {\n                        palette     : palette,\n                        hue         : hue,\n                        class       : 'md-' + palette + '-' + hue + '-bg',\n                        bgColorValue: fuseGenerator.rgba($scope.palettes[palette][hue].value),\n                        fgColorValue: fuseGenerator.rgba($scope.palettes[palette][hue].contrast)\n                    };\n\n                    // If Model object not Equals the selectedColor update it\n                    // it can be happen when the model only have pallete and hue values\n                    if ( $scope.msModelType === 'obj' && !angular.equals($scope.selectedColor, ngModel.$viewValue) )\n                    {\n                        // Update Model Value\n                        updateModel();\n                    }\n\n                    $scope.activateHueSelection(palette, $scope.palettes[palette]);\n                }\n\n                /**\n                 * Update Model Value by model type\n                 */\n                function updateModel()\n                {\n                    if ( $scope.msModelType === 'class' )\n                    {\n                        ngModel.$setViewValue($scope.selectedColor.class);\n                    }\n                    else if ( $scope.msModelType === 'obj' )\n                    {\n                        ngModel.$setViewValue($scope.selectedColor);\n                    }\n                }\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsFormWizardController', MsFormWizardController)\n        .directive('msFormWizard', msFormWizardDirective)\n        .directive('msFormWizardForm', msFormWizardFormDirective);\n\n    /** @ngInject */\n    function MsFormWizardController()\n    {\n        var vm = this;\n\n        // Data\n        vm.forms = [];\n        vm.selectedIndex = 0;\n\n        // Methods\n        vm.registerForm = registerForm;\n\n        vm.previousStep = previousStep;\n        vm.nextStep = nextStep;\n        vm.firstStep = firstStep;\n        vm.lastStep = lastStep;\n\n        vm.totalSteps = totalSteps;\n        vm.isFirstStep = isFirstStep;\n        vm.isLastStep = isLastStep;\n\n        vm.currentStepInvalid = currentStepInvalid;\n        vm.previousStepInvalid = previousStepInvalid;\n        vm.formsIncomplete = formsIncomplete;\n        vm.resetForm = resetForm;\n\n        //////////\n\n        /**\n         * Register form\n         *\n         * @param form\n         */\n        function registerForm(form)\n        {\n            vm.forms.push(form);\n        }\n\n        /**\n         * Go to previous step\n         */\n        function previousStep()\n        {\n            if ( isFirstStep() )\n            {\n                return;\n            }\n\n            vm.selectedIndex--;\n        }\n\n        /**\n         * Go to next step\n         */\n        function nextStep()\n        {\n            if ( isLastStep() )\n            {\n                return;\n            }\n\n            vm.selectedIndex++;\n        }\n\n        /**\n         * Go to first step\n         */\n        function firstStep()\n        {\n            vm.selectedIndex = 0;\n        }\n\n        /**\n         * Go to last step\n         */\n        function lastStep()\n        {\n            vm.selectedIndex = totalSteps() - 1;\n        }\n\n        /**\n         * Return total steps\n         *\n         * @returns {int}\n         */\n        function totalSteps()\n        {\n            return vm.forms.length;\n        }\n\n        /**\n         * Is first step?\n         *\n         * @returns {boolean}\n         */\n        function isFirstStep()\n        {\n            return vm.selectedIndex === 0;\n        }\n\n        /**\n         * Is last step?\n         *\n         * @returns {boolean}\n         */\n        function isLastStep()\n        {\n            return vm.selectedIndex === totalSteps() - 1;\n        }\n\n        /**\n         * Is current step invalid?\n         *\n         * @returns {boolean}\n         */\n        function currentStepInvalid()\n        {\n            return angular.isDefined(vm.forms[vm.selectedIndex]) && vm.forms[vm.selectedIndex].$invalid;\n        }\n\n        /**\n         * Is previous step invalid?\n         *\n         * @returns {boolean}\n         */\n        function previousStepInvalid()\n        {\n            return vm.selectedIndex > 0 && angular.isDefined(vm.forms[vm.selectedIndex - 1]) && vm.forms[vm.selectedIndex - 1].$invalid;\n        }\n\n        /**\n         * Check if there is any incomplete forms\n         *\n         * @returns {boolean}\n         */\n        function formsIncomplete()\n        {\n            for ( var x = 0; x < vm.forms.length; x++ )\n            {\n                if ( vm.forms[x].$invalid )\n                {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Reset form\n         */\n        function resetForm()\n        {\n            // Go back to the first step\n            vm.selectedIndex = 0;\n\n            // Make sure all the forms are back in the $pristine & $untouched status\n            for ( var x = 0; x < vm.forms.length; x++ )\n            {\n                vm.forms[x].$setPristine();\n                vm.forms[x].$setUntouched();\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msFormWizardDirective()\n    {\n        return {\n            restrict  : 'E',\n            scope     : true,\n            controller: 'MsFormWizardController as msWizard',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-form-wizard');\n\n                return function postLink()\n                {\n\n                };\n            }\n        }\n\n    }\n\n    /** @ngInject */\n    function msFormWizardFormDirective()\n    {\n        return {\n            restrict: 'A',\n            require : ['form', '^msFormWizard'],\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-form-wizard-form');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var formCtrl = ctrls[0],\n                        MsFormWizardCtrl = ctrls[1];\n\n                    MsFormWizardCtrl.registerForm(formCtrl);\n                }\n            }\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msDatepickerFixConfig', msDatepickerFixConfigProvider)\n        .directive('msDatepickerFix', msDatepickerFix);\n\n    /** @ngInject */\n    function msDatepickerFixConfigProvider()\n    {\n\n        // Default configuration\n        var defaultConfiguration = {\n            // To view\n            formatter: function (val)\n            {\n                if ( !val )\n                {\n                    return '';\n                }\n\n                return val === '' ? val : new Date(val);\n            },\n            // To model\n            parser   : function (val)\n            {\n                if ( !val )\n                {\n                    return '';\n                }\n                var offset = moment(val).utcOffset();\n                var date = new Date(moment(val).add(offset, 'm'));\n                return date;\n            }\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            defaultConfiguration = angular.extend({}, defaultConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            return defaultConfiguration;\n        };\n    }\n\n    /** @ngInject */\n    function msDatepickerFix(msDatepickerFixConfig)\n    {\n        return {\n            require: 'ngModel',\n            link   : function (scope, elem, attrs, ngModel)\n            {\n                ngModel.$formatters.unshift(msDatepickerFixConfig.formatter); // to view\n                ngModel.$parsers.unshift(msDatepickerFixConfig.parser); // to model\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msCard', msCardDirective);\n\n    /** @ngInject */\n    function msCardDirective()\n    {\n        return {\n            restrict: 'E',\n            scope   : {\n                templatePath: '=template',\n                card        : '=ngModel',\n                vm          : '=viewModel'\n            },\n            template: '<div class=\"ms-card-content-wrapper\" ng-include=\"templatePath\" onload=\"cardTemplateLoaded()\"></div>',\n            compile : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-card');\n\n                return function postLink(scope, iElement)\n                {\n                    // Methods\n                    scope.cardTemplateLoaded = cardTemplateLoaded;\n\n                    //////////\n\n                    /**\n                     * Emit cardTemplateLoaded event\n                     */\n                    function cardTemplateLoaded()\n                    {\n                        scope.$emit('msCard::cardTemplateLoaded', iElement);\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.sample', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($stateProvider, msNavigationServiceProvider)\n    {\n        // State\n        $stateProvider\n            .state('app.sample', {\n                url    : '/sample',\n                views  : {\n                    'content@app': {\n                        templateUrl: 'app/main/sample/sample.html',\n                        controller : 'SampleController as vm'\n                    }\n                },\n            });\n\n\n                // Navigation\n        msNavigationServiceProvider.saveItem('fuse', {\n            title : 'EJEMPLO',\n            group : true,\n            weight: 1\n        });\n\n        msNavigationServiceProvider.saveItem('fuse.sample', {\n            title    : 'Ejemplo',\n            icon     : 'icon-tile-four',\n            state    : 'app.sample',\n            /*stateParams: {\n                'param1': 'page'\n             },*/\n            weight   : 1\n        });\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.sample')\n        .controller('SampleController', SampleController);\n\n    /** @ngInject */\n    function SampleController()\n    {\n        var vm = this;\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('fuseTheming', fuseThemingProvider);\n\n    /** @ngInject */\n    function fuseThemingProvider()\n    {\n        // Inject Cookies Service\n        var $cookies;\n\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Inject $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        var registeredPalettes,\n            registeredThemes;\n\n        // Methods\n        this.setRegisteredPalettes = setRegisteredPalettes;\n        this.setRegisteredThemes = setRegisteredThemes;\n\n        //////////\n\n        /**\n         * Set registered palettes\n         *\n         * @param _registeredPalettes\n         */\n        function setRegisteredPalettes(_registeredPalettes)\n        {\n            registeredPalettes = _registeredPalettes;\n        }\n\n        /**\n         * Set registered themes\n         *\n         * @param _registeredThemes\n         */\n        function setRegisteredThemes(_registeredThemes)\n        {\n            registeredThemes = _registeredThemes;\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getRegisteredPalettes: getRegisteredPalettes,\n                getRegisteredThemes  : getRegisteredThemes,\n                setActiveTheme       : setActiveTheme,\n                setThemesList        : setThemesList,\n                themes               : {\n                    list  : {},\n                    active: {\n                        'name' : '',\n                        'theme': {}\n                    }\n                }\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Get registered palettes\n             *\n             * @returns {*}\n             */\n            function getRegisteredPalettes()\n            {\n                return registeredPalettes;\n            }\n\n            /**\n             * Get registered themes\n             *\n             * @returns {*}\n             */\n            function getRegisteredThemes()\n            {\n                return registeredThemes;\n            }\n\n            /**\n             * Set active theme\n             *\n             * @param themeName\n             */\n            function setActiveTheme(themeName)\n            {\n                // If theme does not exist, fallback to the default theme\n                if ( angular.isUndefined(service.themes.list[themeName]) )\n                {\n                    // If there is no theme called \"default\"...\n                    if ( angular.isUndefined(service.themes.list.default) )\n                    {\n                        $log.error('You must have at least one theme named \"default\"');\n                        return;\n                    }\n\n                    $log.warn('The theme \"' + themeName + '\" does not exist! Falling back to the \"default\" theme.');\n\n                    // Otherwise set theme to default theme\n                    service.themes.active.name = 'default';\n                    service.themes.active.theme = service.themes.list.default;\n                    $cookies.put('selectedTheme', service.themes.active.name);\n\n                    return;\n                }\n\n                service.themes.active.name = themeName;\n                service.themes.active.theme = service.themes.list[themeName];\n                $cookies.put('selectedTheme', themeName);\n            }\n\n            /**\n             * Set available themes list\n             *\n             * @param themeList\n             */\n            function setThemesList(themeList)\n            {\n                service.themes.list = themeList;\n            }\n        };\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .config(config);\n\n    /** @ngInject */\n    function config($mdThemingProvider, fusePalettes, fuseThemes, fuseThemingProvider)\n    {\n        // Inject Cookies Service\n        var $cookies;\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Check if custom theme exist in cookies\n        var customTheme = $cookies.getObject('customTheme');\n        if ( customTheme )\n        {\n            fuseThemes['custom'] = customTheme;\n        }\n\n        $mdThemingProvider.alwaysWatchTheme(true);\n\n        // Define custom palettes\n        angular.forEach(fusePalettes, function (palette)\n        {\n            $mdThemingProvider.definePalette(palette.name, palette.options);\n        });\n\n        // Register custom themes\n        angular.forEach(fuseThemes, function (theme, themeName)\n        {\n            $mdThemingProvider.theme(themeName)\n                .primaryPalette(theme.primary.name, theme.primary.hues)\n                .accentPalette(theme.accent.name, theme.accent.hues)\n                .warnPalette(theme.warn.name, theme.warn.hues)\n                .backgroundPalette(theme.background.name, theme.background.hues);\n        });\n\n        // Store generated PALETTES and THEMES objects from $mdThemingProvider\n        // in our custom provider, so we can inject them into other areas\n        fuseThemingProvider.setRegisteredPalettes($mdThemingProvider._PALETTES);\n        fuseThemingProvider.setRegisteredThemes($mdThemingProvider._THEMES);\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    var fuseThemes = {\n        'default'  : {\n            primary   : {\n                name: 'fuse-pale-blue',\n                hues: {\n                    'default': '700',\n                    'hue-1'  : '500',\n                    'hue-2'  : '600',\n                    'hue-3'  : '400'\n                }\n            },\n            accent    : {\n                name: 'light-blue',\n                hues: {\n                    'default': '600',\n                    'hue-1'  : '400',\n                    'hue-2'  : '700',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {name: 'red'},\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : '100',\n                    'hue-2'  : '50',\n                    'hue-3'  : '300'\n                }\n            }\n        },\n        'pink': {\n            primary   : {\n                name: 'blue-grey',\n                hues: {\n                    'default': '800',\n                    'hue-1'  : '600',\n                    'hue-2'  : '400',\n                    'hue-3'  : 'A100'\n                }\n            },\n            accent    : {\n                name: 'pink',\n                hues: {\n                    'default': '400',\n                    'hue-1'  : '300',\n                    'hue-2'  : '600',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {name: 'blue'},\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : '100',\n                    'hue-2'  : '50',\n                    'hue-3'  : '300'\n                }\n            }\n        },\n        'teal'     : {\n            primary   : {\n                name: 'fuse-blue',\n                hues: {\n                    'default': '900',\n                    'hue-1'  : '600',\n                    'hue-2'  : '500',\n                    'hue-3'  : 'A100'\n                }\n            },\n            accent    : {\n                name: 'teal',\n                hues: {\n                    'default': '500',\n                    'hue-1'  : '400',\n                    'hue-2'  : '600',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {name: 'deep-orange'},\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : '100',\n                    'hue-2'  : '50',\n                    'hue-3'  : '300'\n                }\n            }\n        }\n    };\n\n    angular\n        .module('app.core')\n        .constant('fuseThemes', fuseThemes);\n})();\n(function () {\n    'use strict';\n\n    var fusePalettes = [\n        {\n            name: 'fuse-blue',\n            options: {\n                '50': '#ebf1fa',\n                '100': '#c2d4ef',\n                '200': '#9ab8e5',\n                '300': '#78a0dc',\n                '400': '#5688d3',\n                '500': '#3470ca',\n                '600': '#2e62b1',\n                '700': '#275498',\n                '800': '#21467e',\n                '900': '#1a3865',\n                'A100': '#c2d4ef',\n                'A200': '#9ab8e5',\n                'A400': '#5688d3',\n                'A700': '#275498',\n                'contrastDefaultColor': 'light',\n                'contrastDarkColors': '50 100 200 A100',\n                'contrastStrongLightColors': '300 400'\n            }\n        },\n        {\n            name: 'fuse-pale-blue',\n            options: {\n                '50': '#ececee',\n                '100': '#c5c6cb',\n                '200': '#9ea1a9',\n                '300': '#7d818c',\n                '400': '#5c616f',\n                '500': '#3c4252',\n                '600': '#353a48',\n                '700': '#2d323e',\n                '800': '#262933',\n                '900': '#1e2129',\n                'A100': '#c5c6cb',\n                'A200': '#9ea1a9',\n                'A400': '#5c616f',\n                'A700': '#2d323e',\n                'contrastDefaultColor': 'light',\n                'contrastDarkColors': '50 100 200 A100',\n                'contrastStrongLightColors': '300 400'\n            }\n        }\n    ];\n\n    angular\n        .module('app.core')\n        .constant('fusePalettes', fusePalettes);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('fuseGenerator', fuseGeneratorService);\n\n    /** @ngInject */\n    function fuseGeneratorService($cookies, $log, fuseTheming)\n    {\n        // Storage for simplified themes object\n        var themes = {};\n\n        var service = {\n            generate: generate,\n            rgba    : rgba\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Generate less variables for each theme from theme's\n         * palette by using material color naming conventions\n         */\n        function generate()\n        {\n            var registeredThemes = fuseTheming.getRegisteredThemes();\n            var registeredPalettes = fuseTheming.getRegisteredPalettes();\n\n            // First, create a simplified object that stores\n            // all registered themes and their colors\n\n            // Iterate through registered themes\n            angular.forEach(registeredThemes, function (registeredTheme)\n            {\n                themes[registeredTheme.name] = {};\n\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(registeredTheme.colors, function (colorType, colorTypeName)\n                {\n                    themes[registeredTheme.name][colorTypeName] = {\n                        'name'  : colorType.name,\n                        'levels': {\n                            'default': {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues.default].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 4)\n                            },\n                            'hue1'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 4)\n                            },\n                            'hue2'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 4)\n                            },\n                            'hue3'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 4)\n                            }\n                        }\n                    };\n                });\n            });\n\n            // Process themes one more time and then store them in the service for external use\n            processAndStoreThemes(themes);\n\n            // Iterate through simplified themes\n            // object and create style variables\n            var styleVars = {};\n\n            // Iterate through registered themes\n            angular.forEach(themes, function (theme, themeName)\n            {\n                styleVars = {};\n                styleVars['@themeName'] = themeName;\n\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(theme, function (colorTypes, colorTypeName)\n                {\n                    // Iterate through color levels (default, hue1, hue2 & hue3)\n                    angular.forEach(colorTypes.levels, function (colors, colorLevelName)\n                    {\n                        // Iterate through color name (color, contrast1, contrast2, contrast3 & contrast4)\n                        angular.forEach(colors, function (color, colorName)\n                        {\n                            styleVars['@' + colorTypeName + ucfirst(colorLevelName) + ucfirst(colorName)] = color;\n                        });\n                    });\n                });\n\n                // Render styles\n                render(styleVars);\n            });\n        }\n\n        // ---------------------------\n        //  INTERNAL HELPER FUNCTIONS\n        // ---------------------------\n\n        /**\n         * Process and store themes for global use\n         *\n         * @param _themes\n         */\n        function processAndStoreThemes(_themes)\n        {\n            // Here we will go through every registered theme one more time\n            // and try to simplify their objects as much as possible for\n            // easier access to their properties.\n            var themes = angular.copy(_themes);\n\n            // Iterate through themes\n            angular.forEach(themes, function (theme)\n            {\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(theme, function (colorType, colorTypeName)\n                {\n                    theme[colorTypeName] = colorType.levels;\n                    theme[colorTypeName].color = colorType.levels.default.color;\n                    theme[colorTypeName].contrast1 = colorType.levels.default.contrast1;\n                    theme[colorTypeName].contrast2 = colorType.levels.default.contrast2;\n                    theme[colorTypeName].contrast3 = colorType.levels.default.contrast3;\n                    theme[colorTypeName].contrast4 = colorType.levels.default.contrast4;\n                    delete theme[colorTypeName].default;\n                });\n            });\n\n            // Store themes and set selected theme for the first time\n            fuseTheming.setThemesList(themes);\n\n            // Remember selected theme.\n            var selectedTheme = $cookies.get('selectedTheme');\n\n            if ( selectedTheme )\n            {\n                fuseTheming.setActiveTheme(selectedTheme);\n            }\n            else\n            {\n                fuseTheming.setActiveTheme('default');\n            }\n        }\n\n\n        /**\n         * Render css files\n         *\n         * @param styleVars\n         */\n        function render(styleVars)\n        {\n            var cssTemplate = '[md-theme=\"@themeName\"] a {\\n    color: @accentDefaultColor;\\n}\\n\\n[md-theme=\"@themeName\"] .secondary-text,\\n[md-theme=\"@themeName\"] .icon {\\n    color: @backgroundDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .hint-text,\\n[md-theme=\"@themeName\"] .disabled-text {\\n    color: @backgroundDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .fade-text,\\n[md-theme=\"@themeName\"] .divider {\\n    color: @backgroundDefaultContrast4;\\n}\\n\\n/* Primary */\\n[md-theme=\"@themeName\"] .md-primary-bg {\\n    background-color: @primaryDefaultColor;\\n    color: @primaryDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .icon {\\n    color: @primaryDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .disabled-text {\\n    color: @primaryDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .divider {\\n    color: @primaryDefaultContrast4;\\n}\\n\\n/* Primary, Hue-1 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 {\\n    background-color: @primaryHue1Color;\\n    color: @primaryHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .icon {\\n    color: @primaryHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .disabled-text {\\n    color: @primaryHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .divider {\\n    color: @primaryHue1Contrast4;\\n}\\n\\n/* Primary, Hue-2 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 {\\n    background-color: @primaryHue2Color;\\n    color: @primaryHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .icon {\\n    color: @primaryHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .disabled-text {\\n    color: @primaryHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .divider {\\n    color: @primaryHue2Contrast4;\\n}\\n\\n/* Primary, Hue-3 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 {\\n    background-color: @primaryHue3Color;\\n    color: @primaryHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .icon {\\n    color: @primaryHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .disabled-text {\\n    color: @primaryHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .divider {\\n    color: @primaryHue3Contrast4;\\n}\\n\\n/* Primary foreground */\\n[md-theme=\"@themeName\"] .md-primary-fg {\\n    color: @primaryDefaultColor !important;\\n}\\n\\n/* Primary foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-1 {\\n    color: @primaryHue1Color !important;\\n}\\n\\n/* Primary foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-2 {\\n    color: @primaryHue2Color !important;\\n}\\n\\n/* Primary foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-3 {\\n    color: @primaryHue3Color !important;\\n}\\n\\n\\n/* Accent */\\n[md-theme=\"@themeName\"] .md-accent-bg {\\n    background-color: @accentDefaultColor;\\n    color: @accentDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .icon {\\n    color: @accentDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .disabled-text {\\n    color: @accentDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .divider {\\n    color: @accentDefaultContrast4;\\n}\\n\\n/* Accent, Hue-1 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 {\\n    background-color: @accentHue1Color;\\n    color: @accentHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .icon {\\n    color: @accentHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .disabled-text {\\n    color: @accentHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .divider {\\n    color: @accentHue1Contrast4;\\n}\\n\\n/* Accent, Hue-2 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 {\\n    background-color: @accentHue2Color;\\n    color: @accentHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .icon {\\n    color: @accentHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .disabled-text {\\n    color: @accentHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .divider {\\n    color: @accentHue2Contrast4;\\n}\\n\\n/* Accent, Hue-3 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 {\\n    background-color: @accentHue3Color;\\n    color: @accentHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .icon {\\n    color: @accentHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .disabled-text {\\n    color: @accentHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .divider {\\n    color: @accentHue3Contrast4;\\n}\\n\\n/* Accent foreground */\\n[md-theme=\"@themeName\"] .md-accent-fg {\\n    color: @accentDefaultColor !important;\\n}\\n\\n/* Accent foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-1 {\\n    color: @accentHue1Color !important;\\n}\\n\\n/* Accent foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-2 {\\n    color: @accentHue2Color !important;\\n}\\n\\n/* Accent foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-3 {\\n    color: @accentHue3Color !important;\\n}\\n\\n\\n/* Warn */\\n[md-theme=\"@themeName\"] .md-warn-bg {\\n    background-color: @warnDefaultColor;\\n    color: @warnDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .icon {\\n    color: @warnDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .disabled-text {\\n    color: @warnDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .divider {\\n    color: @warnDefaultContrast4;\\n}\\n\\n/* Warn, Hue-1 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 {\\n    background-color: @warnHue1Color;\\n    color: @warnHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .icon {\\n    color: @warnHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .disabled-text {\\n    color: @warnHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .divider {\\n    color: @warnHue1Contrast4;\\n}\\n\\n/* Warn, Hue-2 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 {\\n    background-color: @warnHue2Color;\\n    color: @warnHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .icon {\\n    color: @warnHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .disabled-text {\\n    color: @warnHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .divider {\\n    color: @warnHue2Contrast4;\\n}\\n\\n/* Warn, Hue-3 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 {\\n    background-color: @warnHue3Color;\\n    color: @warnHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .icon {\\n    color: @warnHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .disabled-text {\\n    color: @warnHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .divider {\\n    color: @warnHue3Contrast4;\\n}\\n\\n/* Warn foreground */\\n[md-theme=\"@themeName\"] .md-warn-fg {\\n    color: @warnDefaultColor !important;\\n}\\n\\n/* Warn foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-1 {\\n    color: @warnHue1Color !important;\\n}\\n\\n/* Warn foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-2 {\\n    color: @warnHue2Color !important;\\n}\\n\\n/* Warn foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-3 {\\n    color: @warnHue3Color !important;\\n}\\n\\n/* Background */\\n[md-theme=\"@themeName\"] .md-background-bg {\\n    background-color: @backgroundDefaultColor;\\n    color: @backgroundDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg .icon {\\n    color: @backgroundDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg .disabled-text {\\n    color: @backgroundDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg .divider {\\n    color: @backgroundDefaultContrast4;\\n}\\n\\n/* Background, Hue-1 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 {\\n    background-color: @backgroundHue1Color;\\n    color: @backgroundHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .icon {\\n    color: @backgroundHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .disabled-text {\\n    color: @backgroundHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .divider {\\n    color: @backgroundHue1Contrast4;\\n}\\n\\n/* Background, Hue-2 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 {\\n    background-color: @backgroundHue2Color;\\n    color: @backgroundHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .icon {\\n    color: @backgroundHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .disabled-text {\\n    color: @backgroundHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .divider {\\n    color: @backgroundHue2Contrast4;\\n}\\n\\n/* Background, Hue-3 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 {\\n    background-color: @backgroundHue3Color;\\n    color: @backgroundHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .icon {\\n    color: @backgroundHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .disabled-text {\\n    color: @backgroundHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .divider {\\n    color: @backgroundHue3Contrast4;\\n}\\n\\n/* Background foreground */\\n[md-theme=\"@themeName\"] .md-background-fg {\\n    color: @backgroundDefaultColor !important;\\n}\\n\\n/* Background foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-1 {\\n    color: @backgroundHue1Color !important;\\n}\\n\\n/* Background foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-2 {\\n    color: @backgroundHue2Color !important;\\n}\\n\\n/* Background foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-3 {\\n    color: @backgroundHue3Color !important;\\n}';\n\n            var regex = new RegExp(Object.keys(styleVars).join('|'), 'gi');\n            var css = cssTemplate.replace(regex, function (matched)\n            {\n                return styleVars[matched];\n            });\n\n            var headEl = angular.element('head');\n            var styleEl = angular.element('<style type=\"text/css\"></style>');\n            styleEl.html(css);\n            headEl.append(styleEl);\n        }\n\n        /**\n         * Convert color array to rgb/rgba\n         * Also apply contrasts if needed\n         *\n         * @param color\n         * @param _contrastLevel\n         * @returns {string}\n         */\n        function rgba(color, _contrastLevel)\n        {\n            var contrastLevel = _contrastLevel || false;\n\n            // Convert 255,255,255,0.XX to 255,255,255\n            // According to Google's Material design specs, white primary\n            // text must have opacity of 1 and we will fix that here\n            // because Angular Material doesn't care about that spec\n            if ( color.length === 4 && color[0] === 255 && color[1] === 255 && color[2] === 255 )\n            {\n                color.splice(3, 4);\n            }\n\n            // If contrast level provided, apply it to the current color\n            if ( contrastLevel )\n            {\n                color = applyContrast(color, contrastLevel);\n            }\n\n            // Convert color array to color string (rgb/rgba)\n            if ( color.length === 3 )\n            {\n                return 'rgb(' + color.join(',') + ')';\n            }\n            else if ( color.length === 4 )\n            {\n                return 'rgba(' + color.join(',') + ')';\n            }\n            else\n            {\n                $log.error('Invalid number of arguments supplied in the color array: ' + color.length + '\\n' + 'The array must have 3 or 4 colors.');\n            }\n        }\n\n        /**\n         * Apply given contrast level to the given color\n         *\n         * @param color\n         * @param contrastLevel\n         */\n        function applyContrast(color, contrastLevel)\n        {\n            var contrastLevels = {\n                'white': {\n                    '1': '1',\n                    '2': '0.7',\n                    '3': '0.3',\n                    '4': '0.12'\n                },\n                'black': {\n                    '1': '0.87',\n                    '2': '0.54',\n                    '3': '0.26',\n                    '4': '0.12'\n                }\n            };\n\n            // If white\n            if ( color[0] === 255 && color[1] === 255 && color[2] === 255 )\n            {\n                color[3] = contrastLevels.white[contrastLevel];\n            }\n            // If black\n            else if ( color[0] === 0 && color[1] === 0, color[2] === 0 )\n            {\n                color[3] = contrastLevels.black[contrastLevel];\n            }\n\n            return color;\n        }\n\n        /**\n         * Uppercase first\n         */\n        function ucfirst(string)\n        {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsThemeOptionsController', MsThemeOptionsController)\n        .directive('msThemeOptions', msThemeOptions);\n\n    /** @ngInject */\n    function MsThemeOptionsController($cookies, fuseTheming)\n    {\n        var vm = this;\n\n        // Data\n        vm.themes = fuseTheming.themes;\n        vm.layoutMode = 'wide';\n        vm.layoutStyle = $cookies.get('layoutStyle') || 'verticalNavigation';\n\n        // Methods\n        vm.setActiveTheme = setActiveTheme;\n        vm.updateLayoutMode = updateLayoutMode;\n        vm.updateLayoutStyle = updateLayoutStyle;\n\n        //////////\n\n        /**\n         * Set active theme\n         *\n         * @param themeName\n         */\n        function setActiveTheme(themeName)\n        {\n            // Set active theme\n            fuseTheming.setActiveTheme(themeName);\n        }\n\n        /**\n         * Update layout mode\n         */\n        function updateLayoutMode()\n        {\n            var bodyEl = angular.element('body');\n\n            // Update class on body element\n            bodyEl.toggleClass('boxed', (vm.layoutMode === 'boxed'));\n        }\n\n        /**\n         * Update layout style\n         */\n        function updateLayoutStyle()\n        {\n            // Update the cookie\n            $cookies.put('layoutStyle', vm.layoutStyle);\n\n            // Reload the page to apply the changes\n            location.reload();\n        }\n    }\n\n    /** @ngInject */\n    function msThemeOptions()\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                panelOpen: '=?'\n            },\n            controller : 'MsThemeOptionsController as vm',\n            templateUrl: 'app/core/theme-options/theme-options.html',\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-theme-options');\n\n                return function postLink(scope, iElement)\n                {\n                    var bodyEl = angular.element('body'),\n                        backdropEl = angular.element('<div class=\"ms-theme-options-backdrop\"></div>');\n\n                    // Panel open status\n                    scope.panelOpen = scope.panelOpen || false;\n\n                    /**\n                     * Toggle options panel\n                     */\n                    function toggleOptionsPanel()\n                    {\n                        if ( scope.panelOpen )\n                        {\n                            closeOptionsPanel();\n                        }\n                        else\n                        {\n                            openOptionsPanel();\n                        }\n                    }\n\n                    function openOptionsPanel()\n                    {\n                        // Set panelOpen status\n                        scope.panelOpen = true;\n\n                        // Add open class\n                        iElement.addClass('open');\n\n                        // Append the backdrop\n                        bodyEl.append(backdropEl);\n\n                        // Register the event\n                        backdropEl.on('click touch', closeOptionsPanel);\n                    }\n\n                    /**\n                     * Close options panel\n                     */\n                    function closeOptionsPanel()\n                    {\n                        // Set panelOpen status\n                        scope.panelOpen = false;\n\n                        // Remove open class\n                        iElement.removeClass('open');\n\n                        // De-register the event\n                        backdropEl.off('click touch', closeOptionsPanel);\n\n                        // Remove the backdrop\n                        backdropEl.remove();\n                    }\n\n                    // Expose the toggle function\n                    scope.toggleOptionsPanel = toggleOptionsPanel;\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('msUtils', msUtils);\n\n    /** @ngInject */\n    function msUtils($window)\n    {\n        // Private variables\n        var mobileDetect = new MobileDetect($window.navigator.userAgent),\n            browserInfo = null;\n\n        var service = {\n            exists       : exists,\n            detectBrowser: detectBrowser,\n            guidGenerator: guidGenerator,\n            isMobile     : isMobile,\n            toggleInArray: toggleInArray\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Check if item exists in a list\n         *\n         * @param item\n         * @param list\n         * @returns {boolean}\n         */\n        function exists(item, list)\n        {\n            return list.indexOf(item) > -1;\n        }\n\n        /**\n         * Returns browser information\n         * from user agent data\n         *\n         * Found at http://www.quirksmode.org/js/detect.html\n         * but modified and updated to fit for our needs\n         */\n        function detectBrowser()\n        {\n            // If we already tested, do not test again\n            if ( browserInfo )\n            {\n                return browserInfo;\n            }\n\n            var browserData = [\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Edge',\n                    versionSearch: 'Edge',\n                    identity     : 'Edge'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Chrome',\n                    identity : 'Chrome'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'OmniWeb',\n                    versionSearch: 'OmniWeb/',\n                    identity     : 'OmniWeb'\n                },\n                {\n                    string       : $window.navigator.vendor,\n                    subString    : 'Apple',\n                    versionSearch: 'Version',\n                    identity     : 'Safari'\n                },\n                {\n                    prop    : $window.opera,\n                    identity: 'Opera'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'iCab',\n                    identity : 'iCab'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'KDE',\n                    identity : 'Konqueror'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Firefox',\n                    identity : 'Firefox'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'Camino',\n                    identity : 'Camino'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Netscape',\n                    identity : 'Netscape'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'MSIE',\n                    identity     : 'Explorer',\n                    versionSearch: 'MSIE'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Trident/7',\n                    identity     : 'Explorer',\n                    versionSearch: 'rv'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Gecko',\n                    identity     : 'Mozilla',\n                    versionSearch: 'rv'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Mozilla',\n                    identity     : 'Netscape',\n                    versionSearch: 'Mozilla'\n                }\n            ];\n\n            var osData = [\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Win',\n                    identity : 'Windows'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Mac',\n                    identity : 'Mac'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Linux',\n                    identity : 'Linux'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPhone',\n                    identity : 'iPhone'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPod',\n                    identity : 'iPod'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPad',\n                    identity : 'iPad'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Android',\n                    identity : 'Android'\n                }\n            ];\n\n            var versionSearchString = '';\n\n            function searchString(data)\n            {\n                for ( var i = 0; i < data.length; i++ )\n                {\n                    var dataString = data[i].string;\n                    var dataProp = data[i].prop;\n\n                    versionSearchString = data[i].versionSearch || data[i].identity;\n\n                    if ( dataString )\n                    {\n                        if ( dataString.indexOf(data[i].subString) !== -1 )\n                        {\n                            return data[i].identity;\n\n                        }\n                    }\n                    else if ( dataProp )\n                    {\n                        return data[i].identity;\n                    }\n                }\n            }\n\n            function searchVersion(dataString)\n            {\n                var index = dataString.indexOf(versionSearchString);\n\n                if ( index === -1 )\n                {\n                    return;\n                }\n\n                return parseInt(dataString.substring(index + versionSearchString.length + 1));\n            }\n\n            var browser = searchString(browserData) || 'unknown-browser';\n            var version = searchVersion($window.navigator.userAgent) || searchVersion($window.navigator.appVersion) || 'unknown-version';\n            var os = searchString(osData) || 'unknown-os';\n\n            // Prepare and store the object\n            browser = browser.toLowerCase();\n            version = browser + '-' + version;\n            os = os.toLowerCase();\n\n            browserInfo = {\n                browser: browser,\n                version: version,\n                os     : os\n            };\n\n            return browserInfo;\n        }\n\n        /**\n         * Generates a globally unique id\n         *\n         * @returns {*}\n         */\n        function guidGenerator()\n        {\n            var S4 = function ()\n            {\n                return (((1 + Math.random()) * 0x10000) || 0).toString(16).substring(1);\n            };\n            return (S4() + S4() + S4() + S4() + S4() + S4());\n        }\n\n        /**\n         * Return if current device is a\n         * mobile device or not\n         */\n        function isMobile()\n        {\n            return mobileDetect.mobile();\n        }\n\n        /**\n         * Toggle in array (push or splice)\n         *\n         * @param item\n         * @param array\n         */\n        function toggleInArray(item, array)\n        {\n            if ( array.indexOf(item) === -1 )\n            {\n                array.push(item);\n            }\n            else\n            {\n                array.splice(array.indexOf(item), 1);\n            }\n        }\n    }\n}());\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msApi', msApiProvider);\n\n    /** @ngInject **/\n    function msApiProvider()\n    {\n        /* ----------------- */\n        /* Provider          */\n        /* ----------------- */\n        var provider = this;\n\n        // Inject required services\n        var $log = angular.injector(['ng']).get('$log'),\n            $resource = angular.injector(['ngResource']).get('$resource');\n\n        // Data\n        var baseUrl = '';\n        var api = [];\n\n        // Methods\n        provider.setBaseUrl = setBaseUrl;\n        provider.getBaseUrl = getBaseUrl;\n        provider.getApiObject = getApiObject;\n        provider.register = register;\n\n        //////////\n\n        /**\n         * Set base url for API endpoints\n         *\n         * @param url {string}\n         */\n        function setBaseUrl(url)\n        {\n            baseUrl = url;\n        }\n\n        /**\n         * Return the base url\n         *\n         * @returns {string}\n         */\n        function getBaseUrl()\n        {\n            return baseUrl;\n        }\n\n        /**\n         * Return the api object\n         *\n         * @returns {object}\n         */\n        function getApiObject()\n        {\n            return api;\n        }\n\n        /**\n         * Register API endpoint\n         *\n         * @param key\n         * @param resource\n         */\n        function register(key, resource)\n        {\n            if ( !angular.isString(key) )\n            {\n                $log.error('\"path\" must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            if ( !angular.isArray(resource) )\n            {\n                $log.error('\"resource\" must be an array and it must follow $resource definition');\n                return;\n            }\n\n            // Prepare the resource object\n            var resourceObj = {\n                url          : baseUrl + (resource[0] || ''),\n                paramDefaults: resource[1] || [],\n                actions      : resource[2] || [],\n                options      : resource[3] || {}\n            };\n\n            // Assign the resource\n            api[key] = $resource(resourceObj.url, resourceObj.paramDefaults, resourceObj.actions, resourceObj.options);\n        }\n\n        /* ----------------- */\n        /* Service           */\n        /* ----------------- */\n        this.$get = function ($q, $log)\n        {\n            // Data\n\n            // Methods\n            var service = {\n                setBaseUrl: setBaseUrl,\n                getBaseUrl: getBaseUrl,\n                register  : register,\n                resolve   : resolve,\n                request   : request\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Resolve an API endpoint\n             *\n             * @param action {string}\n             * @param parameters {object}\n             * @returns {promise|boolean}\n             */\n            function resolve(action, parameters)\n            {\n                var actionParts = action.split('@'),\n                    resource = actionParts[0],\n                    method = actionParts[1],\n                    params = parameters || {};\n\n                if ( !resource || !method )\n                {\n                    $log.error('msApi.resolve requires correct action parameter (resourceName@methodName)');\n                    return false;\n                }\n\n                // Create a new deferred object\n                var deferred = $q.defer();\n\n                // Get the correct resource definition from api object\n                var apiObject = api[resource];\n\n                if ( !apiObject )\n                {\n                    $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                    deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n                }\n                else\n                {\n                    apiObject[method](params,\n\n                        // Success\n                        function (response)\n                        {\n                            deferred.resolve(response);\n                        },\n\n                        // Error\n                        function (response)\n                        {\n                            deferred.reject(response);\n                        }\n                    );\n                }\n\n                // Return the promise\n                return deferred.promise;\n            }\n\n            /**\n             * Make a request to an API endpoint\n             *\n             * @param action {string}\n             * @param [parameters] {object}\n             * @param [success] {function}\n             * @param [error] {function}\n             *\n             * @returns {promise|boolean}\n             */\n            function request(action, parameters, success, error)\n            {\n                var actionParts = action.split('@'),\n                    resource = actionParts[0],\n                    method = actionParts[1],\n                    params = parameters || {};\n\n                if ( !resource || !method )\n                {\n                    $log.error('msApi.resolve requires correct action parameter (resourceName@methodName)');\n                    return false;\n                }\n\n                // Create a new deferred object\n                var deferred = $q.defer();\n\n                // Get the correct resource definition from api object\n                var apiObject = api[resource];\n\n                if ( !apiObject )\n                {\n                    $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                    deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n                }\n                else\n                {\n                    apiObject[method](params,\n\n                        // SUCCESS\n                        function (response)\n                        {\n                            // Resolve the promise\n                            deferred.resolve(response);\n\n                            // Call the success function if there is one\n                            if ( angular.isDefined(success) && angular.isFunction(success) )\n                            {\n                                success(response);\n                            }\n                        },\n\n                        // ERROR\n                        function (response)\n                        {\n                            // Reject the promise\n                            deferred.reject(response);\n\n                            // Call the error function if there is one\n                            if ( angular.isDefined(error) && angular.isFunction(error) )\n                            {\n                                error(response);\n                            }\n                        }\n                    );\n                }\n\n                // Return the promise\n                return deferred.promise;\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('apiResolver', apiResolverService);\n\n    /** @ngInject */\n    function apiResolverService($q, $log, api)\n    {\n        var service = {\n            resolve: resolve\n        };\n\n        return service;\n\n        //////////\n        /**\n         * Resolve api\n         * @param action\n         * @param parameters\n         */\n        function resolve(action, parameters)\n        {\n            var actionParts = action.split('@'),\n                resource = actionParts[0],\n                method = actionParts[1],\n                params = parameters || {};\n\n            if ( !resource || !method )\n            {\n                $log.error('apiResolver.resolve requires correct action parameter (ResourceName@methodName)');\n                return false;\n            }\n\n            // Create a new deferred object\n            var deferred = $q.defer();\n\n            // Get the correct api object from api service\n            var apiObject = getApiObject(resource);\n\n            if ( !apiObject )\n            {\n                $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n            }\n            else\n            {\n                apiObject[method](params,\n\n                    // Success\n                    function (response)\n                    {\n                        deferred.resolve(response);\n                    },\n\n                    // Error\n                    function (response)\n                    {\n                        deferred.reject(response);\n                    }\n                );\n            }\n\n            // Return the promise\n            return deferred.promise;\n        }\n\n        /**\n         * Get correct api object\n         *\n         * @param resource\n         * @returns {*}\n         */\n        function getApiObject(resource)\n        {\n            // Split the resource in case if we have a dot notated object\n            var resourceParts = resource.split('.'),\n                apiObject = api;\n\n            // Loop through the resource parts and go all the way through\n            // the api object and return the correct one\n            for ( var l = 0; l < resourceParts.length; l++ )\n            {\n                if ( angular.isUndefined(apiObject[resourceParts[l]]) )\n                {\n                    $log.error('Resource part \"' + resourceParts[l] + '\" is not defined!');\n                    apiObject = false;\n                    break;\n                }\n\n                apiObject = apiObject[resourceParts[l]];\n            }\n\n            if ( !apiObject )\n            {\n                return false;\n            }\n\n            return apiObject;\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByTags', filterByTags)\n        .filter('filterSingleByTags', filterSingleByTags);\n\n    /** @ngInject */\n    function filterByTags()\n    {\n        return function (items, tags)\n        {\n            if ( items.length === 0 || tags.length === 0 )\n            {\n                return items;\n            }\n\n            var filtered = [];\n\n            items.forEach(function (item)\n            {\n                var match = tags.every(function (tag)\n                {\n                    var tagExists = false;\n\n                    item.tags.forEach(function (itemTag)\n                    {\n                        if ( itemTag.name === tag.name )\n                        {\n                            tagExists = true;\n                            return;\n                        }\n                    });\n\n                    return tagExists;\n                });\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n            });\n\n            return filtered;\n        };\n    }\n\n    /** @ngInject */\n    function filterSingleByTags()\n    {\n        return function (itemTags, tags)\n        {\n            if ( itemTags.length === 0 || tags.length === 0 )\n            {\n                return;\n            }\n\n            if ( itemTags.length < tags.length )\n            {\n                return [];\n            }\n\n            var filtered = [];\n\n            var match = tags.every(function (tag)\n            {\n                var tagExists = false;\n\n                itemTags.forEach(function (itemTag)\n                {\n                    if ( itemTag.name === tag.name )\n                    {\n                        tagExists = true;\n                        return;\n                    }\n                });\n\n                return tagExists;\n            });\n\n            if ( match )\n            {\n                filtered.push(itemTags);\n            }\n\n            return filtered;\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('toTrusted', toTrustedFilter)\n        .filter('htmlToPlaintext', htmlToPlainTextFilter)\n        .filter('nospace', nospaceFilter)\n        .filter('humanizeDoc', humanizeDocFilter);\n\n    /** @ngInject */\n    function toTrustedFilter($sce)\n    {\n        return function (value)\n        {\n            return $sce.trustAsHtml(value);\n        };\n    }\n\n    /** @ngInject */\n    function htmlToPlainTextFilter()\n    {\n        return function (text)\n        {\n            return String(text).replace(/<[^>]+>/gm, '');\n        };\n    }\n\n    /** @ngInject */\n    function nospaceFilter()\n    {\n        return function (value)\n        {\n            return (!value) ? '' : value.replace(/ /g, '');\n        };\n    }\n\n    /** @ngInject */\n    function humanizeDocFilter()\n    {\n        return function (doc)\n        {\n            if ( !doc )\n            {\n                return;\n            }\n            if ( doc.type === 'directive' )\n            {\n                return doc.name.replace(/([A-Z])/g, function ($1)\n                {\n                    return '-' + $1.toLowerCase();\n                });\n            }\n            return doc.label || doc.name;\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('hljs', hljsDirective);\n\n    /** @ngInject */\n    function hljsDirective($timeout, $q, $interpolate)\n    {\n        return {\n            restrict: 'EA',\n            compile : function (tElement, tAttrs)\n            {\n                var code;\n                //No attribute? code is the content\n                if ( !tAttrs.code )\n                {\n                    code = tElement.html();\n                    tElement.empty();\n                }\n\n                return function (scope, iElement, iAttrs)\n                {\n                    if ( iAttrs.code )\n                    {\n                        // Attribute? code is the evaluation\n                        code = scope.$eval(iAttrs.code);\n                    }\n                    var shouldInterpolate = scope.$eval(iAttrs.shouldInterpolate);\n\n                    $q.when(code).then(function (code)\n                    {\n                        if ( code )\n                        {\n                            if ( shouldInterpolate )\n                            {\n                                code = $interpolate(code)(scope);\n                            }\n\n                            var contentParent = angular.element(\n                                '<pre><code class=\"highlight\" ng-non-bindable></code></pre>'\n                            );\n\n                            iElement.append(contentParent);\n\n                            // Defer highlighting 1-frame to prevent GA interference...\n                            $timeout(function ()\n                            {\n                                render(code, contentParent);\n                            }, 34, false);\n                        }\n                    });\n\n                    function render(contents, parent)\n                    {\n                        var codeElement = parent.find('code');\n                        var lines = contents.split('\\n');\n\n                        // Remove empty lines\n                        lines = lines.filter(function (line)\n                        {\n                            return line.trim().length;\n                        });\n\n                        // Make it so each line starts at 0 whitespace\n                        var firstLineWhitespace = lines[0].match(/^\\s*/)[0];\n                        var startingWhitespaceRegex = new RegExp('^' + firstLineWhitespace);\n\n                        lines = lines.map(function (line)\n                        {\n                            return line\n                                .replace(startingWhitespaceRegex, '')\n                                .replace(/\\s+$/, '');\n                        });\n\n                        var highlightedCode = hljs.highlight(iAttrs.language || iAttrs.lang, lines.join('\\n'), true);\n                        highlightedCode.value = highlightedCode.value\n                            .replace(/=<span class=\"hljs-value\">\"\"<\\/span>/gi, '')\n                            .replace('<head>', '')\n                            .replace('<head/>', '');\n                        codeElement.append(highlightedCode.value).addClass('highlight');\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('fuseConfig', fuseConfigProvider);\n\n    /** @ngInject */\n    function fuseConfigProvider()\n    {\n        // Default configuration\n        var fuseConfiguration = {\n            'disableCustomScrollbars'        : false,\n            'disableMdInkRippleOnMobile'     : true,\n            'disableCustomScrollbarsOnMobile': true\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            fuseConfiguration = angular.extend({}, fuseConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getConfig: getConfig,\n                setConfig: setConfig\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Returns a config value\n             */\n            function getConfig(configName)\n            {\n                if ( angular.isUndefined(fuseConfiguration[configName]) )\n                {\n                    return false;\n                }\n\n                return fuseConfiguration[configName];\n            }\n\n            /**\n             * Creates or updates config object\n             *\n             * @param configName\n             * @param configValue\n             */\n            function setConfig(configName, configValue)\n            {\n                fuseConfiguration[configName] = configValue;\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.toolbar', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($translatePartialLoaderProvider)\n    {\n        $translatePartialLoaderProvider.addPart('app/toolbar');\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.toolbar')\n        .controller('ToolbarController', ToolbarController);\n\n    /** @ngInject */\n    function ToolbarController($rootScope, $state, authService)\n    {\n        var vm = this;\n\n        // Data\n        $rootScope.global = {\n            search: ''\n        };\n\n        vm.bodyEl = angular.element('body');\n        //\n        vm.logout = logout;\n        vm.toggleHorizontalMobileMenu = toggleHorizontalMobileMenu;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            loadUser();\n        }\n\n        function loadUser(){\n            if(authService.currentUser()) {\n                vm.userNombre = authService.currentUser().email\n                vm.userRol = authService.currentUser().rol;\n            }\n        };\n        /**\n         * Logout Function\n         */\n        function logout()\n        {\n            sessionStorage.clear();\n            $state.go('app.pages_autenticacion_login');\n        }\n\n        /**\n         * Change Language\n         */\n\n        /**\n         * Toggle horizontal mobile menu\n         */\n        function toggleHorizontalMobileMenu()\n        {\n            vm.bodyEl.toggleClass('ms-navigation-horizontal-mobile-menu-active');\n        }\n    }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.navigation', [])\n        .config(config);\n\n    /** @ngInject */\n    function config()\n    {\n        \n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.navigation')\n        .controller('NavigationController', NavigationController);\n\n    /** @ngInject */\n    function NavigationController($scope)\n    {\n        var vm = this;\n\n        // Data\n        vm.bodyEl = angular.element('body');\n        vm.folded = false;\n        vm.msScrollOptions = {\n            suppressScrollX: true\n        };\n\n        // Methods\n        vm.toggleMsNavigationFolded = toggleMsNavigationFolded;\n\n        //////////\n\n        /**\n         * Toggle folded status\n         */\n        function toggleMsNavigationFolded()\n        {\n            vm.folded = !vm.folded;\n        }\n\n        // Close the mobile menu on $stateChangeSuccess\n        $scope.$on('$stateChangeSuccess', function ()\n        {\n            vm.bodyEl.removeClass('ms-navigation-horizontal-mobile-menu-active');\n        });\n    }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    /**\n     * Main module of the Fuse\n     */\n    angular\n        .module('fuse', [\n\n            // Core\n            'app.core',\n\n            //jwt\n            'angular-jwt',\n\n            //restangular\n            'restangular',\n\n            // Navigation\n            'app.navigation',\n\n            // Toolbar\n            'app.toolbar',\n\n            // Sample\n            'app.sample',\n            //autenticacion\n            'app.pages.autenticacion.login'\n        ]);\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController($scope, $rootScope)\n    {\n        // Data\n\n        //////////\n\n        // Remove the splash screen\n        $scope.$on('$viewContentAnimationEnded', function (event)\n        {\n            if ( event.targetScope.$id === $scope.$id )\n            {\n                $rootScope.$broadcast('msSplashScreen::remove');\n            }\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock(msUtils, fuseGenerator, fuseConfig)\n    {\n        /**\n         * Generate extra classes based on registered themes so we\n         * can use same colors with non-angular-material elements\n         */\n        fuseGenerator.generate();\n\n        /**\n         * Disable md-ink-ripple effects on mobile\n         * if 'disableMdInkRippleOnMobile' config enabled\n         */\n        if ( fuseConfig.getConfig('disableMdInkRippleOnMobile') && msUtils.isMobile() )\n        {\n            var bodyEl = angular.element('body');\n            bodyEl.attr('md-no-ink', true);\n        }\n\n        /**\n         * Put isMobile() to the html as a class\n         */\n        if ( msUtils.isMobile() )\n        {\n            angular.element('html').addClass('is-mobile');\n        }\n\n        /**\n         * Put browser information to the html as a class\n         */\n        var browserInfo = msUtils.detectBrowser();\n        if ( browserInfo )\n        {\n            var htmlClass = browserInfo.browser + ' ' + browserInfo.version + ' ' + browserInfo.os;\n            angular.element('html').addClass(htmlClass);\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .config(config);\n\n    /** @ngInject */\n    function config($ariaProvider, $logProvider, msScrollConfigProvider, $translateProvider, fuseConfigProvider)\n    {\n        // Enable debug logging\n        $logProvider.debugEnabled(true);\n\n        // toastr configuration\n        toastr.options.timeOut = 3000;\n        toastr.options.positionClass = 'toast-top-right';\n        toastr.options.preventDuplicates = true;\n        toastr.options.progressBar = true;\n\n        // angular-translate configuration\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: '{part}/i18n/{lang}.json'\n        });\n        $translateProvider.preferredLanguage('en');\n        $translateProvider.useSanitizeValueStrategy('sanitize');\n\n        /*eslint-disable */\n\n        // ng-aria configuration\n        $ariaProvider.config({\n            tabindex: false\n        });\n\n        // Fuse theme configurations\n        fuseConfigProvider.config({\n            'disableCustomScrollbars'        : false,\n            'disableCustomScrollbarsOnMobile': true,\n            'disableMdInkRippleOnMobile'     : true\n        });\n\n        // msScroll configuration\n        msScrollConfigProvider.config({\n            wheelPropagation: true\n        });\n\n        /*eslint-enable */\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $timeout, $state)\n    {\n        // Activate loading indicator\n        var stateChangeStartEvent = $rootScope.$on('$stateChangeStart', function ()\n        {\n            $rootScope.loadingProgress = true;\n        });\n\n        // De-activate loading indicator\n        var stateChangeSuccessEvent = $rootScope.$on('$stateChangeSuccess', function ()\n        {\n            $timeout(function ()\n            {\n                $rootScope.loadingProgress = false;\n            });\n        });\n\n        // Store state in the root scope for easy access\n        $rootScope.state = $state;\n\n        // Cleanup\n        $rootScope.$on('$destroy', function ()\n        {\n            stateChangeStartEvent();\n            stateChangeSuccessEvent();\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .config(routeConfig);\n\n    /** @ngInject */\n    function routeConfig($stateProvider, $urlRouterProvider, $locationProvider, RestangularProvider)\n    {\n      // config restangular\n        RestangularProvider.setBaseUrl('http://localhost/semilac-upc/public/api');\n        \n        $locationProvider.html5Mode(true);\n\n        $urlRouterProvider.otherwise('/autenticacion/login');\n\n        /**\n         * Layout Style Switcher\n         *\n         * This code is here for demonstration purposes.\n         * If you don't need to switch between the layout\n         * styles like in the demo, you can set one manually by\n         * typing the template urls into the `State definitions`\n         * area and remove this code\n         */\n        // Inject $cookies\n        var $cookies;\n\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Get active layout\n        var layoutStyle = $cookies.get('layoutStyle') || 'verticalNavigation';\n\n        var layouts = {\n            verticalNavigation  : {\n                main      : 'app/core/layouts/vertical-navigation.html',\n                toolbar   : 'app/toolbar/layouts/vertical-navigation/toolbar.html',\n                navigation: 'app/navigation/layouts/vertical-navigation/navigation.html'\n            },\n        };\n        // END - Layout Style Switcher\n\n        // State definitions\n        $stateProvider\n            .state('app', {\n                abstract: true,\n                views   : {\n                    'main@'         : {\n                        templateUrl: layouts[layoutStyle].main,\n                        controller : 'MainController as vm'\n                    },\n                    'toolbar@app'   : {\n                        templateUrl: layouts[layoutStyle].toolbar,\n                        controller : 'ToolbarController as vm'\n                    },\n                    'navigation@app': {\n                        templateUrl: layouts[layoutStyle].navigation,\n                        controller : 'NavigationController as vm'\n                    }\n                }\n            });\n    }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .controller('IndexController', IndexController);\n\n    /** @ngInject */\n    function IndexController(fuseTheming)\n    {\n        var vm = this;\n\n        // Data\n        vm.themes = fuseTheming.themes;\n\n        //////////\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse');\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .config(config);\n\n    /** @ngInject */\n    function config()\n    {\n        // Put your custom configurations here\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .factory('api', apiService);\n\n    /** @ngInject */\n    function apiService($resource)\n    {\n        /**\n         * You can use this service to define your API urls. The \"api\" service\n         * is designed to work in parallel with \"apiResolver\" service which you can\n         * find in the \"app/core/services/api-resolver.service.js\" file.\n         *\n         * You can structure your API urls whatever the way you want to structure them.\n         * You can either use very simple definitions, or you can use multi-dimensional\n         * objects.\n         *\n         * Here's a very simple API url definition example:\n         *\n         *      api.getBlogList = $resource('http://api.example.com/getBlogList');\n         *\n         * While this is a perfectly valid $resource definition, most of the time you will\n         * find yourself in a more complex situation where you want url parameters:\n         *\n         *      api.getBlogById = $resource('http://api.example.com/blog/:id', {id: '@id'});\n         *\n         * You can also define your custom methods. Custom method definitions allow you to\n         * add hardcoded parameters to your API calls that you want to sent every time you\n         * make that API call:\n         *\n         *      api.getBlogById = $resource('http://api.example.com/blog/:id', {id: '@id'}, {\n         *         'getFromHomeCategory' : {method: 'GET', params: {blogCategory: 'home'}}\n         *      });\n         *\n         * In addition to these definitions, you can also create multi-dimensional objects.\n         * They are nothing to do with the $resource object, it's just a more convenient\n         * way that we have created for you to packing your related API urls together:\n         *\n         *      api.blog = {\n         *                   list     : $resource('http://api.example.com/blog'),\n         *                   getById  : $resource('http://api.example.com/blog/:id', {id: '@id'}),\n         *                   getByDate: $resource('http://api.example.com/blog/:date', {id: '@date'}, {\n         *                       get: {\n         *                            method: 'GET',\n         *                            params: {\n         *                                getByDate: true\n         *                            }\n         *                       }\n         *                   })\n         *       }\n         *\n         * If you look at the last example from above, we overrode the 'get' method to put a\n         * hardcoded parameter. Now every time we make the \"getByDate\" call, the {getByDate: true}\n         * object will also be sent along with whatever data we are sending.\n         *\n         * All the above methods are using standard $resource service. You can learn more about\n         * it at: https://docs.angularjs.org/api/ngResource/service/$resource\n         *\n         * -----\n         *\n         * After you defined your API urls, you can use them in Controllers, Services and even\n         * in the UIRouter state definitions.\n         *\n         * If we use the last example from above, you can do an API call in your Controllers and\n         * Services like this:\n         *\n         *      function MyController (api)\n         *      {\n         *          // Get the blog list\n         *          api.blog.list.get({},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *\n         *          // Get the blog with the id of 3\n         *          var id = 3;\n         *          api.blog.getById.get({'id': id},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *\n         *          // Get the blog with the date by using custom defined method\n         *          var date = 112314232132;\n         *          api.blog.getByDate.get({'date': date},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *      }\n         *\n         * Because we are directly using $resource service, all your API calls will return a\n         * $promise object.\n         *\n         * --\n         *\n         * If you want to do the same calls in your UI Router state definitions, you need to use\n         * \"apiResolver\" service we have prepared for you:\n         *\n         *      $stateProvider.state('app.blog', {\n         *          url      : '/blog',\n         *          views    : {\n         *               'content@app': {\n         *                   templateUrl: 'app/main/apps/blog/blog.html',\n         *                   controller : 'BlogController as vm'\n         *               }\n         *          },\n         *          resolve  : {\n         *              Blog: function (apiResolver)\n         *              {\n         *                  return apiResolver.resolve('blog.list@get');\n         *              }\n         *          }\n         *      });\n         *\n         *  You can even use parameters with apiResolver service:\n         *\n         *      $stateProvider.state('app.blog.show', {\n         *          url      : '/blog/:id',\n         *          views    : {\n         *               'content@app': {\n         *                   templateUrl: 'app/main/apps/blog/blog.html',\n         *                   controller : 'BlogController as vm'\n         *               }\n         *          },\n         *          resolve  : {\n         *              Blog: function (apiResolver, $stateParams)\n         *              {\n         *                  return apiResolver.resolve('blog.getById@get', {'id': $stateParams.id);\n         *              }\n         *          }\n         *      });\n         *\n         *  And the \"Blog\" object will be available in your BlogController:\n         *\n         *      function BlogController(Blog)\n         *      {\n         *          var vm = this;\n         *\n         *          // Data\n         *          vm.blog = Blog;\n         *\n         *          ...\n         *      }\n         */\n\n        var api = {};\n\n        // Base Url\n        api.baseUrl = 'app/data/';\n\n        // api.sample = $resource(api.baseUrl + 'sample/sample.json');\n\n        return api;\n    }\n\n})();\nangular.module(\"fuse\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/core/layouts/content-only.html\",\"<div id=\\\"layout-content-only\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ui-view=\\\"content\\\" flex></md-content></div>\");\n$templateCache.put(\"app/core/layouts/content-with-toolbar.html\",\"<div id=\\\"layout-content-with-toolbar\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ui-view=\\\"content\\\" flex></md-content></div>\");\n$templateCache.put(\"app/core/layouts/horizontal-navigation.html\",\"<div id=\\\"layout-horizontal-navigation\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div id=\\\"horizontal-navigation\\\" class=\\\"md-whiteframe-1dp\\\" \\nui-view=\\\"navigation\\\"></div><div id=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav \\nid=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll \\nui-view=\\\"quickPanel\\\"></md-sidenav></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation.html\",\"<div id=\\\"layout-vertical-navigation\\\" class=\\\"template-layout\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" \\nclass=\\\"md-primary-bg\\\" md-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll \\nui-view=\\\"navigation\\\"></md-sidenav><div id=\\\"content-container\\\" flex layout=\\\"column\\\"><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-background md-hue-1\\\" ms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav \\nid=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll \\nui-view=\\\"quickPanel\\\"></md-sidenav></div>\");\n$templateCache.put(\"app/core/theme-options/theme-options.html\",\"<div class=\\\"ms-theme-options-panel\\\" layout=\\\"row\\\" layout-align=\\\"start start\\\"><div \\nclass=\\\"ms-theme-options-panel-button md-primary-bg\\\" ng-click=\\\"toggleOptionsPanel()\\\"><md-icon md-font-icon=\\\"icon-cog\\\" \\nclass=\\\"white-text\\\"></md-icon></div><div class=\\\"ms-theme-options-list\\\" layout=\\\"column\\\"><div class=\\\"theme-option\\\"><div \\nclass=\\\"option-title\\\">Layout Style:</div><md-radio-group layout=\\\"column\\\" ng-model=\\\"vm.layoutStyle\\\" \\nng-change=\\\"vm.updateLayoutStyle()\\\"><md-radio-button value=\\\"verticalNavigation\\\">Vertical Navigation</md-radio-button>\\n<md-radio-button value=\\\"horizontalNavigation\\\">Horizontal Navigation</md-radio-button><md-radio-button \\nvalue=\\\"contentOnly\\\">Content Only</md-radio-button><md-radio-button value=\\\"contentWithToolbar\\\">Content with Toolbar\\n</md-radio-button></md-radio-group></div><md-divider></md-divider><div class=\\\"theme-option\\\"><div class=\\\"option-title\\\">\\nLayout Mode:</div><md-radio-group layout=\\\"row\\\" layout-align=\\\"start center\\\" ng-model=\\\"vm.layoutMode\\\" \\nng-change=\\\"vm.updateLayoutMode()\\\"><md-radio-button value=\\\"boxed\\\">Boxed</md-radio-button><md-radio-button value=\\\"wide\\\">\\nWide</md-radio-button></md-radio-group></div><md-divider></md-divider><div class=\\\"theme-option\\\"><div \\nclass=\\\"option-title\\\">Color Palette:</div><md-menu-item ng-repeat=\\\"(themeName, theme) in vm.themes.list\\\" class=\\\"theme\\\">\\n<md-button class=\\\"md-raised theme-button\\\" aria-label=\\\"{{themeName}}\\\" ng-click=\\\"vm.setActiveTheme(themeName)\\\" \\nng-style=\\\"{\\'background-color\\': theme.primary.color,\\'border-color\\': theme.accent.color,\\'color\\': theme.primary.contrast1}\\\" \\nng-class=\\\"themeName\\\"><span><md-icon ng-style=\\\"{\\'color\\': theme.primary.contrast1}\\\" md-font-icon=\\\"icon-palette\\\">\\n</md-icon><span>{{themeName}}</span></span></md-button></md-menu-item></div></div></div>\");\n$templateCache.put(\"app/main/sample/sample.html\",\"<h1>PAGINA EJEMPLO</h1>\");\n$templateCache.put(\"app/core/directives/ms-material-color-picker/ms-material-color-picker.html\",\"<md-menu md-position-mode=\\\"target-right target\\\"><md-button aria-label=\\\"Row Color\\\" md-menu-origin \\nng-click=\\\"$mdOpenMenu($event)\\\" ng-class=\\\"selectedColor.class\\\"><span ng-show=\\\"selectedColor.palette\\\">\\n{{selectedColor.palette}} {{selectedColor.hue}} </span><span ng-show=\\\"!selectedColor.palette\\\">Select Color</span>\\n</md-button><md-menu-content class=\\\"ms-material-color-picker-menu-content\\\" layout-column><header \\nng-class=\\\"selectedColor.class || \\'md-accent-bg\\'\\\" class=\\\"md-whiteframe-4dp\\\" layout=\\\"row\\\" \\nlayout-align=\\\"space-between center\\\"><md-button md-prevent-menu-close ng-click=\\\"activateHueSelection(false,false)\\\" \\nclass=\\\"md-icon-button\\\" ng-class=\\\"{\\'hidden\\':!selectedPalette}\\\" aria-label=\\\"Palette\\\"><md-icon \\nmd-font-icon=\\\"icon-arrow-left\\\" class=\\\"s20\\\"></md-icon></md-button><span ng-if=\\\"selectedColor.palette\\\">\\n{{selectedColor.palette}} {{selectedColor.hue}} </span><span ng-if=\\\"!selectedColor.palette\\\">Select Color</span>\\n<md-button class=\\\"remove-color-button md-icon-button\\\" ng-click=\\\"removeColor()\\\" aria-label=\\\"Remove Color\\\"><md-icon \\nmd-font-icon=\\\"icon-delete\\\" class=\\\"s20\\\"></md-icon></md-button></header><div class=\\\"colors\\\" ms-scroll><div \\nng-if=\\\"!selectedPalette\\\" layout=\\\"row\\\" layout-wrap><div class=\\\"color\\\" ng-class=\\\"\\'md-\\'+palette+\\'-500-bg\\'\\\" \\nng-repeat=\\\"(palette, hues) in palettes\\\" ng-click=\\\"activateHueSelection(palette,hues)\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start end\\\" md-prevent-menu-close md-ink-ripple><span class=\\\"label\\\">{{palette}}</span></div></div><div \\nng-if=\\\"selectedPalette\\\" layout=\\\"row\\\" layout-wrap><div class=\\\"color\\\" ng-class=\\\"\\'md-\\'+selectedPalette+\\'-\\'+hue+\\'-bg\\'\\\" \\nng-repeat=\\\"(hue, values) in selectedHues\\\" ng-click=\\\"selectColor(selectedPalette,hue)\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start end\\\" md-ink-ripple><span class=\\\"label\\\">{{hue}} </span><i \\nng-if=\\\"selectedPalette == selectedColor.palette && hue == selectedColor.hue\\\" class=\\\"s16 icon-check\\\"></i></div></div>\\n</div></md-menu-content></md-menu>\");\n$templateCache.put(\"app/core/directives/ms-search-bar/ms-search-bar.html\",\"<div flex layout=\\\"row\\\" layout-align=\\\"start center\\\"><label for=\\\"ms-search-bar-input\\\"><md-icon \\nid=\\\"ms-search-bar-expander\\\" md-font-icon=\\\"icon-magnify\\\" class=\\\"icon s24\\\"></md-icon><md-icon \\nid=\\\"ms-search-bar-collapser\\\" md-font-icon=\\\"icon-close\\\" class=\\\"icon s24\\\"></md-icon></label><input \\nid=\\\"ms-search-bar-input\\\" type=\\\"text\\\" ng-model=\\\"global.search\\\" placeholder=\\\"Search\\\" translate \\ntranslate-attr-placeholder=\\\"TOOLBAR.SEARCH\\\" flex></div>\");\n$templateCache.put(\"app/navigation/layouts/horizontal-navigation/navigation.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><ms-navigation-horizontal></ms-navigation-horizontal></div>\");\n$templateCache.put(\"app/navigation/layouts/vertical-navigation/navigation.html\",\"<md-toolbar class=\\\"navigation-header md-whiteframe-1dp\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"logo\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">S</span> <span class=\\\"logo-text\\\">\\nSEMILAC-UPC</span></div><md-icon class=\\\"fold-toggle s18\\\" md-font-icon=\\\"icon-backburger\\\" hide show-gt-sm \\nng-click=\\\"vm.toggleMsNavigationFolded()\\\"></md-icon></md-toolbar><ms-navigation class=\\\"scrollable\\\" folded=\\\"vm.folded\\\" \\nms-scroll=\\\"vm.msScrollOptions\\\"></ms-navigation>\");\n$templateCache.put(\"app/toolbar/layouts/vertical-navigation/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><md-button \\nid=\\\"navigation-toggle\\\" class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'navigation\\')\\\" hide-gt-sm \\naria-label=\\\"Toggle navigation\\\"><md-icon md-font-icon=\\\"icon-menu\\\" class=\\\"icon\\\"></md-icon></md-button><ms-search-bar>\\n</ms-search-bar><div class=\\\"toolbar-separator\\\"></div><md-progress-circular id=\\\"toolbar-progress\\\" \\nng-if=\\\"$root.loadingProgress\\\" class=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" md-diameter=\\\"64\\\"></md-progress-circular></div>\\n<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\">\\n<md-button class=\\\"user-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\"><div layout=\\\"row\\\" \\nlayout-align=\\\"space-between center\\\"><div class=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" \\nsrc=\\\"assets/images/avatars/profile.jpg\\\"></div><span ng-if=\\\"vm.userRol == \\'SUPER_ADMIN\\'\\\" class=\\\"username\\\" hide-xs>\\n{{vm.userRol}}</span> <span ng-if=\\\"vm.userRol != \\'SUPER_ADMIN\\'\\\" class=\\\"username\\\" hide-xs>{{vm.userNombre}}</span>\\n<md-icon md-font-icon=\\\"icon-chevron-down\\\" class=\\\"icon s16\\\" hide-xs></md-icon></div></md-button><md-menu-content \\nwidth=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.pages_profile\\\" ng-if=\\\"vm.userRol != \\'SUPER_ADMIN\\'\\\"><md-icon \\nmd-font-icon=\\\"icon-account\\\" class=\\\"icon\\\"></md-icon><md-button>Mi perfil</md-button></md-menu-item><md-menu-divider>\\n</md-menu-divider><md-menu-item class=\\\"md-indent\\\"><md-icon md-font-icon=\\\"icon-logout\\\" class=\\\"icon\\\"></md-icon><md-button\\n ng-click=\\\"vm.logout()\\\">Cerar sesion</md-button></md-menu-item></md-menu-content></md-menu></md-menu-bar><div \\nclass=\\\"toolbar-separator\\\"></div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-navigation/templates/horizontal.html\",\"<div class=\\\"navigation-toggle\\\" hide-gt-sm><md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleHorizontalMobileMenu()\\\" \\naria-label=\\\"Toggle Mobile Navigation\\\"><md-icon md-font-icon=\\\"icon-menu\\\"></md-icon></md-button></div><ul \\nclass=\\\"horizontal\\\"><li ng-repeat=\\\"node in vm.navigation\\\" ms-navigation-horizontal-node=\\\"node\\\" \\nng-class=\\\"{\\'has-children\\': vm.hasChildren}\\\" ng-include=\\\"\\'navigation-horizontal-nested.html\\'\\\"></li></ul><script \\ntype=\\\"text/ng-template\\\" id=\\\"navigation-horizontal-nested.html\\\">\\n<div ms-navigation-horizontal-item layout=\\\"row\\\" ng-if=\\\"!vm.isHidden()\\\">\\n\\n        <div class=\\\"ms-navigation-horizontal-button\\\" ng-if=\\\"!node.uisref && node.title\\\"\\n             ng-class=\\\"{\\'active md-accent-bg\\': vm.isActive}\\\">\\n            <i class=\\\"icon s18 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" style=\\\"background: {{node.badge.color}}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s18 arrow\\\" ng-if=\\\"vm.hasChildren\\\"></i>\\n        </div>\\n\\n        <a class=\\\"ms-navigation-horizontal-button\\\" ui-sref=\\\"{{node.uisref}}\\\" ui-sref-active=\\\"active md-accent-bg\\\"\\n           ng-class=\\\"{\\'active md-accent-bg\\': vm.isActive}\\\"\\n           ng-if=\\\"node.uisref && node.title\\\">\\n            <i class=\\\"icon s18 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" style=\\\"background: {{node.badge.color}}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s18 arrow\\\" ng-if=\\\"vm.hasChildren\\\"></i>\\n        </a>\\n\\n    </div>\\n\\n    <ul ng-if=\\\"vm.hasChildren && !vm.isHidden()\\\">\\n        <li ng-repeat=\\\"node in node.children\\\" ms-navigation-horizontal-node=\\\"node\\\"\\n            ng-class=\\\"{\\'has-children\\': vm.hasChildren}\\\"\\n            ng-include=\\\"\\'navigation-horizontal-nested.html\\'\\\"></li>\\n    </ul>\\n</script>\");\n$templateCache.put(\"app/core/directives/ms-navigation/templates/vertical.html\",\"<ul><li ng-repeat=\\\"node in vm.navigation\\\" ms-navigation-node=\\\"node\\\" \\nng-class=\\\"{\\'collapsed\\': vm.collapsed, \\'has-children\\': vm.hasChildren}\\\" ng-include=\\\"\\'navigation-nested.html\\'\\\"></li></ul>\\n<script type=\\\"text/ng-template\\\" id=\\\"navigation-nested.html\\\">\\n<div ms-navigation-item layout=\\\"row\\\" ng-if=\\\"!vm.isHidden()\\\">\\n\\n        <div class=\\\"ms-navigation-button\\\" ng-if=\\\"!node.uisref && node.title\\\">\\n            <i class=\\\"icon s16 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" ng-style=\\\"{\\'background\\': node.badge.color}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s16 arrow\\\" ng-if=\\\"vm.collapsable && vm.hasChildren\\\"></i>\\n        </div>\\n\\n        <a class=\\\"ms-navigation-button\\\" ui-sref=\\\"{{node.uisref}}\\\" ui-sref-active=\\\"active md-accent-bg\\\"\\n           ng-if=\\\"node.uisref && node.title\\\">\\n            <i class=\\\"icon s16 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" ng-style=\\\"{\\'background\\': node.badge.color}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s16 arrow\\\" ng-if=\\\"vm.collapsable && vm.hasChildren\\\"></i>\\n        </a>\\n\\n    </div>\\n\\n    <ul ng-if=\\\"vm.hasChildren && !vm.isHidden()\\\">\\n        <li ng-repeat=\\\"node in node.children\\\" ms-navigation-node=\\\"node\\\"\\n            ng-class=\\\"{\\'collapsed\\': vm.collapsed, \\'has-children\\': vm.hasChildren}\\\"\\n            ng-include=\\\"\\'navigation-nested.html\\'\\\"></li>\\n    </ul>\\n</script>\");\n$templateCache.put(\"app/main/pages/autenticacion/login/login.html\",\"<div id=\\\"login\\\" layout=\\\"row\\\" layout-align=\\\"start\\\"><div id=\\\"login-intro\\\" flex hide show-gt-sm><div \\nclass=\\\"logo md-accent-bg\\\"><span>S</span></div><div class=\\\"title\\\">BINVENIDO A SEMILAC UPC!</div><div \\nclass=\\\"description\\\">Aca podras hacer seguimiento de todos los proyectos y semilleros en nuestra institucion</div></div>\\n<div id=\\\"login-form-wrapper\\\" class=\\\"flex-scrollable md-whiteframe-8dp\\\" ms-scroll><div id=\\\"login-form\\\"><div \\nclass=\\\"logo md-accent-bg\\\" hide-gt-sm><span>S</span></div><div class=\\\"title\\\">Inicia sesion con tu cuenta</div><form \\nname=\\\"loginForm\\\" novalidate><md-input-container class=\\\"md-block\\\" md-no-float><input type=\\\"email\\\" name=\\\"email\\\" \\nng-model=\\\"vm.usuario.name\\\" placeholder=\\\"Email Ej: ejemplo@ejemplo.com\\\" ng-pattern=\\\"/^.+@.+\\\\..+$/\\\" required><div \\nng-messages=\\\"loginForm.email.$error\\\" role=\\\"alert\\\" multiple=\\\"multiple\\\"><div ng-message=\\\"required\\\"><span>\\nEste campo es requrido</span></div><div ng-message=\\\"pattern\\\"><span>Ingresa una direccion de email valida</span></div>\\n</div></md-input-container><md-input-container class=\\\"md-block\\\" md-no-float><input type=\\\"password\\\" name=\\\"password\\\" \\nng-model=\\\"vm.usuario.pass\\\" placeholder=\\\"Contrase&ntilde;a\\\" required><div ng-messages=\\\"loginForm.password.$error\\\" \\nrole=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>Este campo es requerido</span></div></div></md-input-container><div \\nclass=\\\"remember-forgot-password\\\" layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"space-between center\\\"><a \\nui-sref=\\\"app.pages_auth_forgot-password\\\" class=\\\"forgot-password md-accent-color\\\">¿Se te olvidó tu contraseña?</a></div>\\n<md-button ng-click=\\\"vm.iniciarSesion()\\\" type=\\\"submit\\\" class=\\\"md-raised md-accent submit-button\\\" \\naria-label=\\\"INICIAR SESIÓN\\\" ng-disabled=\\\"loginForm.$invalid || loginForm.$pristine\\\">INICIAR SESIÓN</md-button></form>\\n<div class=\\\"register\\\" layout=\\\"row\\\" layout-sm=\\\"column\\\" layout-align=\\\"center center\\\"><span class=\\\"text\\\">\\n¿No tienes una cuenta?</span> <a class=\\\"link\\\" ui-sref=\\\"app.pages_auth_register\\\">Crea una ahora</a></div></div></div>\\n</div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-1/template-1.html\",\"<div class=\\\"template-1\\\"><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"title h1\\\" \\nng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}\\n</div><div class=\\\"text pt-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-10/template-10.html\",\"<div class=\\\"template-10 p-16\\\"><div class=\\\"pb-16\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div class=\\\"info\\\">\\n<div class=\\\"title secondary-text\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle h2\\\" \\nng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div></div><div class=\\\"media ml-16\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div><div \\nclass=\\\"text\\\">{{card.text}}</div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-2/template-2.html\",\"<div class=\\\"template-2\\\"><div class=\\\"header p-16\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div ng-if=\\\"card.avatar\\\"><img\\n class=\\\"avatar mr-16\\\" ng-src=\\\"{{card.avatar.src}}\\\" alt=\\\"{{card.avatar.alt}}\\\"></div><div class=\\\"info\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div></div></div><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"text p-16\\\" ng-if=\\\"card.text\\\">{{card.text}}\\n</div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-3/template-3.html\",\"<div class=\\\"template-3 p-16 teal-bg white-fg\\\" layout=\\\"row\\\" layout-align=\\\"space-between\\\"><div layout=\\\"column\\\" \\nlayout-align=\\\"space-between\\\"><div class=\\\"info\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div \\nclass=\\\"subtitle h3 secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div></div><div class=\\\"cta\\\"><md-button \\nclass=\\\"m-0\\\">{{card.cta}}</md-button></div></div><div class=\\\"media pl-16\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-4/template-4.html\",\"<div class=\\\"template-4\\\"><div class=\\\"info white-fg ph-16 pv-24\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}\\n</div><div class=\\\"text\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div><div class=\\\"media\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-5/template-5.html\",\"<div class=\\\"template-5 p-16\\\" layout=\\\"row\\\" layout-align=\\\"space-between start\\\"><div class=\\\"info\\\"><div \\nclass=\\\"title secondary-text\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"event h2\\\" ng-if=\\\"card.event\\\">\\n{{card.event}}</div></div><div class=\\\"media ml-16\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-6/template-6.html\",\"<div class=\\\"template-6\\\"><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div><div class=\\\"title h2\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"text pt-8\\\" \\nng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-7/template-7.html\",\"<div class=\\\"template-7\\\" layout=\\\"row\\\" layout-align=\\\"space-between\\\"><div class=\\\"info\\\" layout=\\\"column\\\" \\nlayout-align=\\\"space-between\\\" layout-fill flex><div class=\\\"p-16\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}\\n</div><div class=\\\"subtitle h4 secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div><div class=\\\"text h4 pt-8\\\" \\nng-if=\\\"card.text\\\">{{card.text}}</div></div><div><md-divider></md-divider><div class=\\\"p-8\\\" layout=\\\"row\\\"><md-icon \\nmd-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\">\\n</md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" \\nclass=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon></div></div></div><div \\nclass=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" \\nng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-8/template-8.html\",\"<div class=\\\"template-8\\\"><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"title h1\\\" \\nng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}\\n</div><div class=\\\"buttons pt-16\\\"><md-button class=\\\"m-0\\\">{{card.button1}}</md-button><md-button class=\\\"m-0 md-accent\\\">\\n{{card.button2}}</md-button></div><div class=\\\"text pt-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-9/template-9.html\",\"<div class=\\\"template-9\\\"><div class=\\\"header p-16\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div ng-if=\\\"card.avatar\\\"><img\\n class=\\\"avatar mr-16\\\" ng-src=\\\"{{card.avatar.src}}\\\" alt=\\\"{{card.avatar.alt}}\\\"></div><div class=\\\"info\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div></div></div><div class=\\\"text ph-16 pb-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div><div \\nclass=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" \\nng-show=\\\"card.media.image\\\"></div><div class=\\\"buttons m-8\\\"><md-button class=\\\"md-icon-button mr-16\\\" \\naria-label=\\\"Favorite\\\"><md-icon md-font-icon=\\\"icon-heart-outline\\\" class=\\\"s24\\\"></md-icon></md-button><md-button \\nclass=\\\"md-icon-button\\\" aria-label=\\\"Share\\\"><md-icon md-font-icon=\\\"icon-share\\\" class=\\\"s24\\\"></md-icon></md-button></div>\\n</div>\");\n$templateCache.put(\"app/core/directives/ms-stepper/templates/horizontal/horizontal.html\",\"<div class=\\\"ms-stepper-horizontal\\\"><div class=\\\"ms-stepper-navigation-wrapper\\\"><div class=\\\"ms-stepper-navigation\\\" \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button class=\\\"ms-stepper-navigation-item\\\" \\nng-class=\\\"{\\'current\\': MsStepper.isStepCurrent(step.stepNumber), \\'valid\\': MsStepper.isStepValid(step.stepNumber), \\'disabled\\': MsStepper.isStepDisabled(step.stepNumber), \\'optional\\': MsStepper.isStepOptional(step.stepNumber)}\\\" \\nng-click=\\\"MsStepper.gotoStep(step.stepNumber)\\\" ng-disabled=\\\"MsStepper.isStepDisabled(step.stepNumber)\\\" \\nng-repeat=\\\"step in MsStepper.steps\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div class=\\\"step md-accent-bg\\\" \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><span \\nng-if=\\\"!MsStepper.isStepValid(step.stepNumber) || MsStepper.isStepOptional(step.stepNumber)\\\">{{step.stepNumber}} \\n</span><span ng-if=\\\"MsStepper.isStepValid(step.stepNumber) && !MsStepper.isStepOptional(step.stepNumber)\\\"><i \\nclass=\\\"icon icon-check s18\\\"></i></span></div><div layout=\\\"column\\\" layout-align=\\\"start start\\\"><div class=\\\"title\\\">\\n{{step.stepTitle}}</div><div class=\\\"subtitle\\\" ng-if=\\\"MsStepper.isStepOptional(step.stepNumber)\\\">Optional</div></div>\\n</md-button></div></div><div class=\\\"ms-stepper-steps\\\" ng-transclude></div><div class=\\\"ms-stepper-controls\\\" \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button class=\\\"md-accent md-raised\\\" ng-disabled=\\\"MsStepper.isFirstStep()\\\" \\nng-click=\\\"MsStepper.gotoPreviousStep()\\\">Back</md-button><div class=\\\"ms-stepper-dots\\\"><span \\nng-repeat=\\\"step in MsStepper.steps\\\" ng-class=\\\"{\\'selected md-accent-bg\\':MsStepper.currentStepNumber === $index + 1}\\\">\\n</span></div><md-button class=\\\"md-accent md-raised\\\" ng-if=\\\"!MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isStepValid(MsStepper.currentStepNumber)\\\" ng-click=\\\"MsStepper.gotoNextStep()\\\">Next</md-button>\\n<md-button type=\\\"submit\\\" class=\\\"md-accent md-raised\\\" ng-click=\\\"MsStepper.resetForm()\\\" ng-if=\\\"MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isFormValid()\\\">Submit</md-button></div></div>\");}]);"],"sourceRoot":"/source/"}